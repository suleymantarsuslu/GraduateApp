{"ast":null,"code":"\"use strict\";\n\nvar FormatValidators = require(\"./FormatValidators\"),\n    Report = require(\"./Report\"),\n    Utils = require(\"./Utils\");\n\nvar shouldSkipValidate = function (options, errors) {\n  return options && Array.isArray(options.includeErrors) && options.includeErrors.length > 0 && !errors.some(function (err) {\n    return options.includeErrors.includes(err);\n  });\n};\n\nvar JsonValidators = {\n  multipleOf: function (report, schema, json) {\n    // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.1.1.2\n    if (shouldSkipValidate(this.validateOptions, [\"MULTIPLE_OF\"])) {\n      return;\n    }\n\n    if (typeof json !== \"number\") {\n      return;\n    }\n\n    var stringMultipleOf = String(schema.multipleOf);\n    var scale = Math.pow(10, stringMultipleOf.length - stringMultipleOf.indexOf(\".\") - 1);\n\n    if (Utils.whatIs(json * scale / (schema.multipleOf * scale)) !== \"integer\") {\n      report.addError(\"MULTIPLE_OF\", [json, schema.multipleOf], null, schema);\n    }\n  },\n  maximum: function (report, schema, json) {\n    // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.1.2.2\n    if (shouldSkipValidate(this.validateOptions, [\"MAXIMUM\", \"MAXIMUM_EXCLUSIVE\"])) {\n      return;\n    }\n\n    if (typeof json !== \"number\") {\n      return;\n    }\n\n    if (schema.exclusiveMaximum !== true) {\n      if (json > schema.maximum) {\n        report.addError(\"MAXIMUM\", [json, schema.maximum], null, schema);\n      }\n    } else {\n      if (json >= schema.maximum) {\n        report.addError(\"MAXIMUM_EXCLUSIVE\", [json, schema.maximum], null, schema);\n      }\n    }\n  },\n  exclusiveMaximum: function () {// covered in maximum\n  },\n  minimum: function (report, schema, json) {\n    // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.1.3.2\n    if (shouldSkipValidate(this.validateOptions, [\"MINIMUM\", \"MINIMUM_EXCLUSIVE\"])) {\n      return;\n    }\n\n    if (typeof json !== \"number\") {\n      return;\n    }\n\n    if (schema.exclusiveMinimum !== true) {\n      if (json < schema.minimum) {\n        report.addError(\"MINIMUM\", [json, schema.minimum], null, schema);\n      }\n    } else {\n      if (json <= schema.minimum) {\n        report.addError(\"MINIMUM_EXCLUSIVE\", [json, schema.minimum], null, schema);\n      }\n    }\n  },\n  exclusiveMinimum: function () {// covered in minimum\n  },\n  maxLength: function (report, schema, json) {\n    // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.2.1.2\n    if (shouldSkipValidate(this.validateOptions, [\"MAX_LENGTH\"])) {\n      return;\n    }\n\n    if (typeof json !== \"string\") {\n      return;\n    }\n\n    if (Utils.ucs2decode(json).length > schema.maxLength) {\n      report.addError(\"MAX_LENGTH\", [json.length, schema.maxLength], null, schema);\n    }\n  },\n  minLength: function (report, schema, json) {\n    // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.2.2.2\n    if (shouldSkipValidate(this.validateOptions, [\"MIN_LENGTH\"])) {\n      return;\n    }\n\n    if (typeof json !== \"string\") {\n      return;\n    }\n\n    if (Utils.ucs2decode(json).length < schema.minLength) {\n      report.addError(\"MIN_LENGTH\", [json.length, schema.minLength], null, schema);\n    }\n  },\n  pattern: function (report, schema, json) {\n    // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.2.3.2\n    if (shouldSkipValidate(this.validateOptions, [\"PATTERN\"])) {\n      return;\n    }\n\n    if (typeof json !== \"string\") {\n      return;\n    }\n\n    if (RegExp(schema.pattern).test(json) === false) {\n      report.addError(\"PATTERN\", [schema.pattern, json], null, schema);\n    }\n  },\n  additionalItems: function (report, schema, json) {\n    // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.3.1.2\n    if (shouldSkipValidate(this.validateOptions, [\"ARRAY_ADDITIONAL_ITEMS\"])) {\n      return;\n    }\n\n    if (!Array.isArray(json)) {\n      return;\n    } // if the value of \"additionalItems\" is boolean value false and the value of \"items\" is an array,\n    // the json is valid if its size is less than, or equal to, the size of \"items\".\n\n\n    if (schema.additionalItems === false && Array.isArray(schema.items)) {\n      if (json.length > schema.items.length) {\n        report.addError(\"ARRAY_ADDITIONAL_ITEMS\", null, null, schema);\n      }\n    }\n  },\n  items: function () {\n    /*report, schema, json*/\n    // covered in additionalItems\n  },\n  maxItems: function (report, schema, json) {\n    // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.3.2.2\n    if (shouldSkipValidate(this.validateOptions, [\"ARRAY_LENGTH_LONG\"])) {\n      return;\n    }\n\n    if (!Array.isArray(json)) {\n      return;\n    }\n\n    if (json.length > schema.maxItems) {\n      report.addError(\"ARRAY_LENGTH_LONG\", [json.length, schema.maxItems], null, schema);\n    }\n  },\n  minItems: function (report, schema, json) {\n    // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.3.3.2\n    if (shouldSkipValidate(this.validateOptions, [\"ARRAY_LENGTH_SHORT\"])) {\n      return;\n    }\n\n    if (!Array.isArray(json)) {\n      return;\n    }\n\n    if (json.length < schema.minItems) {\n      report.addError(\"ARRAY_LENGTH_SHORT\", [json.length, schema.minItems], null, schema);\n    }\n  },\n  uniqueItems: function (report, schema, json) {\n    // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.3.4.2\n    if (shouldSkipValidate(this.validateOptions, [\"ARRAY_UNIQUE\"])) {\n      return;\n    }\n\n    if (!Array.isArray(json)) {\n      return;\n    }\n\n    if (schema.uniqueItems === true) {\n      var matches = [];\n\n      if (Utils.isUniqueArray(json, matches) === false) {\n        report.addError(\"ARRAY_UNIQUE\", matches, null, schema);\n      }\n    }\n  },\n  maxProperties: function (report, schema, json) {\n    // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.4.1.2\n    if (shouldSkipValidate(this.validateOptions, [\"OBJECT_PROPERTIES_MAXIMUM\"])) {\n      return;\n    }\n\n    if (Utils.whatIs(json) !== \"object\") {\n      return;\n    }\n\n    var keysCount = Object.keys(json).length;\n\n    if (keysCount > schema.maxProperties) {\n      report.addError(\"OBJECT_PROPERTIES_MAXIMUM\", [keysCount, schema.maxProperties], null, schema);\n    }\n  },\n  minProperties: function (report, schema, json) {\n    // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.4.2.2\n    if (shouldSkipValidate(this.validateOptions, [\"OBJECT_PROPERTIES_MINIMUM\"])) {\n      return;\n    }\n\n    if (Utils.whatIs(json) !== \"object\") {\n      return;\n    }\n\n    var keysCount = Object.keys(json).length;\n\n    if (keysCount < schema.minProperties) {\n      report.addError(\"OBJECT_PROPERTIES_MINIMUM\", [keysCount, schema.minProperties], null, schema);\n    }\n  },\n  required: function (report, schema, json) {\n    // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.4.3.2\n    if (shouldSkipValidate(this.validateOptions, [\"OBJECT_MISSING_REQUIRED_PROPERTY\"])) {\n      return;\n    }\n\n    if (Utils.whatIs(json) !== \"object\") {\n      return;\n    }\n\n    var idx = schema.required.length;\n\n    while (idx--) {\n      var requiredPropertyName = schema.required[idx];\n\n      if (json[requiredPropertyName] === undefined) {\n        report.addError(\"OBJECT_MISSING_REQUIRED_PROPERTY\", [requiredPropertyName], null, schema);\n      }\n    }\n  },\n  additionalProperties: function (report, schema, json) {\n    // covered in properties and patternProperties\n    if (schema.properties === undefined && schema.patternProperties === undefined) {\n      return JsonValidators.properties.call(this, report, schema, json);\n    }\n  },\n  patternProperties: function (report, schema, json) {\n    // covered in properties\n    if (schema.properties === undefined) {\n      return JsonValidators.properties.call(this, report, schema, json);\n    }\n  },\n  properties: function (report, schema, json) {\n    // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.4.4.2\n    if (shouldSkipValidate(this.validateOptions, [\"OBJECT_ADDITIONAL_PROPERTIES\"])) {\n      return;\n    }\n\n    if (Utils.whatIs(json) !== \"object\") {\n      return;\n    }\n\n    var properties = schema.properties !== undefined ? schema.properties : {};\n    var patternProperties = schema.patternProperties !== undefined ? schema.patternProperties : {};\n\n    if (schema.additionalProperties === false) {\n      // The property set of the json to validate.\n      var s = Object.keys(json); // The property set from \"properties\".\n\n      var p = Object.keys(properties); // The property set from \"patternProperties\".\n\n      var pp = Object.keys(patternProperties); // remove from \"s\" all elements of \"p\", if any;\n\n      s = Utils.difference(s, p); // for each regex in \"pp\", remove all elements of \"s\" which this regex matches.\n\n      var idx = pp.length;\n\n      while (idx--) {\n        var regExp = RegExp(pp[idx]),\n            idx2 = s.length;\n\n        while (idx2--) {\n          if (regExp.test(s[idx2]) === true) {\n            s.splice(idx2, 1);\n          }\n        }\n      } // Validation of the json succeeds if, after these two steps, set \"s\" is empty.\n\n\n      if (s.length > 0) {\n        // assumeAdditional can be an array of allowed properties\n        var idx3 = this.options.assumeAdditional.length;\n\n        if (idx3) {\n          while (idx3--) {\n            var io = s.indexOf(this.options.assumeAdditional[idx3]);\n\n            if (io !== -1) {\n              s.splice(io, 1);\n            }\n          }\n        }\n\n        var idx4 = s.length;\n\n        if (idx4) {\n          while (idx4--) {\n            report.addError(\"OBJECT_ADDITIONAL_PROPERTIES\", [s[idx4]], null, schema);\n          }\n        }\n      }\n    }\n  },\n  dependencies: function (report, schema, json) {\n    // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.4.5.2\n    if (shouldSkipValidate(this.validateOptions, [\"OBJECT_DEPENDENCY_KEY\"])) {\n      return;\n    }\n\n    if (Utils.whatIs(json) !== \"object\") {\n      return;\n    }\n\n    var keys = Object.keys(schema.dependencies),\n        idx = keys.length;\n\n    while (idx--) {\n      // iterate all dependencies\n      var dependencyName = keys[idx];\n\n      if (json[dependencyName]) {\n        var dependencyDefinition = schema.dependencies[dependencyName];\n\n        if (Utils.whatIs(dependencyDefinition) === \"object\") {\n          // if dependency is a schema, validate against this schema\n          exports.validate.call(this, report, dependencyDefinition, json);\n        } else {\n          // Array\n          // if dependency is an array, object needs to have all properties in this array\n          var idx2 = dependencyDefinition.length;\n\n          while (idx2--) {\n            var requiredPropertyName = dependencyDefinition[idx2];\n\n            if (json[requiredPropertyName] === undefined) {\n              report.addError(\"OBJECT_DEPENDENCY_KEY\", [requiredPropertyName, dependencyName], null, schema);\n            }\n          }\n        }\n      }\n    }\n  },\n  enum: function (report, schema, json) {\n    // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.5.1.2\n    if (shouldSkipValidate(this.validateOptions, [\"ENUM_CASE_MISMATCH\", \"ENUM_MISMATCH\"])) {\n      return;\n    }\n\n    var match = false,\n        caseInsensitiveMatch = false,\n        idx = schema.enum.length;\n\n    while (idx--) {\n      if (Utils.areEqual(json, schema.enum[idx])) {\n        match = true;\n        break;\n      } else if (Utils.areEqual(json, schema.enum[idx]), {\n        caseInsensitiveComparison: true\n      }) {\n        caseInsensitiveMatch = true;\n      }\n    }\n\n    if (match === false) {\n      var error = caseInsensitiveMatch && this.options.enumCaseInsensitiveComparison ? \"ENUM_CASE_MISMATCH\" : \"ENUM_MISMATCH\";\n      report.addError(error, [json], null, schema);\n    }\n  },\n  type: function (report, schema, json) {\n    // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.5.2.2\n    if (shouldSkipValidate(this.validateOptions, [\"INVALID_TYPE\"])) {\n      return;\n    }\n\n    var jsonType = Utils.whatIs(json);\n\n    if (typeof schema.type === \"string\") {\n      if (jsonType !== schema.type && (jsonType !== \"integer\" || schema.type !== \"number\")) {\n        report.addError(\"INVALID_TYPE\", [schema.type, jsonType], null, schema);\n      }\n    } else {\n      if (schema.type.indexOf(jsonType) === -1 && (jsonType !== \"integer\" || schema.type.indexOf(\"number\") === -1)) {\n        report.addError(\"INVALID_TYPE\", [schema.type, jsonType], null, schema);\n      }\n    }\n  },\n  allOf: function (report, schema, json) {\n    // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.5.3.2\n    var idx = schema.allOf.length;\n\n    while (idx--) {\n      var validateResult = exports.validate.call(this, report, schema.allOf[idx], json);\n\n      if (this.options.breakOnFirstError && validateResult === false) {\n        break;\n      }\n    }\n  },\n  anyOf: function (report, schema, json) {\n    // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.5.4.2\n    var subReports = [],\n        passed = false,\n        idx = schema.anyOf.length;\n\n    while (idx-- && passed === false) {\n      var subReport = new Report(report);\n      subReports.push(subReport);\n      passed = exports.validate.call(this, subReport, schema.anyOf[idx], json);\n    }\n\n    if (passed === false) {\n      report.addError(\"ANY_OF_MISSING\", undefined, subReports, schema);\n    }\n  },\n  oneOf: function (report, schema, json) {\n    // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.5.5.2\n    var passes = 0,\n        subReports = [],\n        idx = schema.oneOf.length;\n\n    while (idx--) {\n      var subReport = new Report(report, {\n        maxErrors: 1\n      });\n      subReports.push(subReport);\n\n      if (exports.validate.call(this, subReport, schema.oneOf[idx], json) === true) {\n        passes++;\n      }\n    }\n\n    if (passes === 0) {\n      report.addError(\"ONE_OF_MISSING\", undefined, subReports, schema);\n    } else if (passes > 1) {\n      report.addError(\"ONE_OF_MULTIPLE\", null, null, schema);\n    }\n  },\n  not: function (report, schema, json) {\n    // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.5.6.2\n    var subReport = new Report(report);\n\n    if (exports.validate.call(this, subReport, schema.not, json) === true) {\n      report.addError(\"NOT_PASSED\", null, null, schema);\n    }\n  },\n  definitions: function () {\n    /*report, schema, json*/\n    // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.5.7.2\n    // nothing to do here\n  },\n  format: function (report, schema, json) {\n    // http://json-schema.org/latest/json-schema-validation.html#rfc.section.7.2\n    var formatValidatorFn = FormatValidators[schema.format];\n\n    if (typeof formatValidatorFn === \"function\") {\n      if (shouldSkipValidate(this.validateOptions, [\"INVALID_FORMAT\"])) {\n        return;\n      }\n\n      if (formatValidatorFn.length === 2) {\n        // async - need to clone the path here, because it will change by the time async function reports back\n        var pathBeforeAsync = Utils.clone(report.path);\n        report.addAsyncTask(formatValidatorFn, [json], function (result) {\n          if (result !== true) {\n            var backup = report.path;\n            report.path = pathBeforeAsync;\n            report.addError(\"INVALID_FORMAT\", [schema.format, json], null, schema);\n            report.path = backup;\n          }\n        });\n      } else {\n        // sync\n        if (formatValidatorFn.call(this, json) !== true) {\n          report.addError(\"INVALID_FORMAT\", [schema.format, json], null, schema);\n        }\n      }\n    } else if (this.options.ignoreUnknownFormats !== true) {\n      report.addError(\"UNKNOWN_FORMAT\", [schema.format], null, schema);\n    }\n  }\n};\n\nvar recurseArray = function (report, schema, json) {\n  // http://json-schema.org/latest/json-schema-validation.html#rfc.section.8.2\n  var idx = json.length; // If \"items\" is an array, this situation, the schema depends on the index:\n  // if the index is less than, or equal to, the size of \"items\",\n  // the child instance must be valid against the corresponding schema in the \"items\" array;\n  // otherwise, it must be valid against the schema defined by \"additionalItems\".\n\n  if (Array.isArray(schema.items)) {\n    while (idx--) {\n      // equal to doesn't make sense here\n      if (idx < schema.items.length) {\n        report.path.push(idx);\n        exports.validate.call(this, report, schema.items[idx], json[idx]);\n        report.path.pop();\n      } else {\n        // might be boolean, so check that it's an object\n        if (typeof schema.additionalItems === \"object\") {\n          report.path.push(idx);\n          exports.validate.call(this, report, schema.additionalItems, json[idx]);\n          report.path.pop();\n        }\n      }\n    }\n  } else if (typeof schema.items === \"object\") {\n    // If items is a schema, then the child instance must be valid against this schema,\n    // regardless of its index, and regardless of the value of \"additionalItems\".\n    while (idx--) {\n      report.path.push(idx);\n      exports.validate.call(this, report, schema.items, json[idx]);\n      report.path.pop();\n    }\n  }\n};\n\nvar recurseObject = function (report, schema, json) {\n  // http://json-schema.org/latest/json-schema-validation.html#rfc.section.8.3\n  // If \"additionalProperties\" is absent, it is considered present with an empty schema as a value.\n  // In addition, boolean value true is considered equivalent to an empty schema.\n  var additionalProperties = schema.additionalProperties;\n\n  if (additionalProperties === true || additionalProperties === undefined) {\n    additionalProperties = {};\n  } // p - The property set from \"properties\".\n\n\n  var p = schema.properties ? Object.keys(schema.properties) : []; // pp - The property set from \"patternProperties\". Elements of this set will be called regexes for convenience.\n\n  var pp = schema.patternProperties ? Object.keys(schema.patternProperties) : []; // m - The property name of the child.\n\n  var keys = Object.keys(json),\n      idx = keys.length;\n\n  while (idx--) {\n    var m = keys[idx],\n        propertyValue = json[m]; // s - The set of schemas for the child instance.\n\n    var s = []; // 1. If set \"p\" contains value \"m\", then the corresponding schema in \"properties\" is added to \"s\".\n\n    if (p.indexOf(m) !== -1) {\n      s.push(schema.properties[m]);\n    } // 2. For each regex in \"pp\", if it matches \"m\" successfully, the corresponding schema in \"patternProperties\" is added to \"s\".\n\n\n    var idx2 = pp.length;\n\n    while (idx2--) {\n      var regexString = pp[idx2];\n\n      if (RegExp(regexString).test(m) === true) {\n        s.push(schema.patternProperties[regexString]);\n      }\n    } // 3. The schema defined by \"additionalProperties\" is added to \"s\" if and only if, at this stage, \"s\" is empty.\n\n\n    if (s.length === 0 && additionalProperties !== false) {\n      s.push(additionalProperties);\n    } // we are passing tests even without this assert because this is covered by properties check\n    // if s is empty in this stage, no additionalProperties are allowed\n    // report.expect(s.length !== 0, 'E001', m);\n    // Instance property value must pass all schemas from s\n\n\n    idx2 = s.length;\n\n    while (idx2--) {\n      report.path.push(m);\n      exports.validate.call(this, report, s[idx2], propertyValue);\n      report.path.pop();\n    }\n  }\n};\n\nexports.JsonValidators = JsonValidators;\n/**\n *\n * @param {Report} report\n * @param {*} schema\n * @param {*} json\n */\n\nexports.validate = function (report, schema, json) {\n  report.commonErrorMessage = \"JSON_OBJECT_VALIDATION_FAILED\"; // check if schema is an object\n\n  var to = Utils.whatIs(schema);\n\n  if (to !== \"object\") {\n    report.addError(\"SCHEMA_NOT_AN_OBJECT\", [to], null, schema);\n    return false;\n  } // check if schema is empty, everything is valid against empty schema\n\n\n  var keys = Object.keys(schema);\n\n  if (keys.length === 0) {\n    return true;\n  } // this method can be called recursively, so we need to remember our root\n\n\n  var isRoot = false;\n\n  if (!report.rootSchema) {\n    report.rootSchema = schema;\n    isRoot = true;\n  } // follow schema.$ref keys\n\n\n  if (schema.$ref !== undefined) {\n    // avoid infinite loop with maxRefs\n    var maxRefs = 99;\n\n    while (schema.$ref && maxRefs > 0) {\n      if (!schema.__$refResolved) {\n        report.addError(\"REF_UNRESOLVED\", [schema.$ref], null, schema);\n        break;\n      } else if (schema.__$refResolved === schema) {\n        break;\n      } else {\n        schema = schema.__$refResolved;\n        keys = Object.keys(schema);\n      }\n\n      maxRefs--;\n    }\n\n    if (maxRefs === 0) {\n      throw new Error(\"Circular dependency by $ref references!\");\n    }\n  } // type checking first\n\n\n  var jsonType = Utils.whatIs(json);\n\n  if (schema.type) {\n    keys.splice(keys.indexOf(\"type\"), 1);\n    JsonValidators.type.call(this, report, schema, json);\n\n    if (report.errors.length && this.options.breakOnFirstError) {\n      return false;\n    }\n  } // now iterate all the keys in schema and execute validation methods\n\n\n  var idx = keys.length;\n\n  while (idx--) {\n    if (JsonValidators[keys[idx]]) {\n      JsonValidators[keys[idx]].call(this, report, schema, json);\n\n      if (report.errors.length && this.options.breakOnFirstError) {\n        break;\n      }\n    }\n  }\n\n  if (report.errors.length === 0 || this.options.breakOnFirstError === false) {\n    if (jsonType === \"array\") {\n      recurseArray.call(this, report, schema, json);\n    } else if (jsonType === \"object\") {\n      recurseObject.call(this, report, schema, json);\n    }\n  }\n\n  if (typeof this.options.customValidator === \"function\") {\n    this.options.customValidator.call(this, report, schema, json);\n  } // we don't need the root pointer anymore\n\n\n  if (isRoot) {\n    report.rootSchema = undefined;\n  } // return valid just to be able to break at some code points\n\n\n  return report.errors.length === 0;\n};","map":{"version":3,"sources":["/Users/suleymantarsuslu/Desktop/graduateApp/new/graduate/node_modules/z-schema/src/JsonValidation.js"],"names":["FormatValidators","require","Report","Utils","shouldSkipValidate","options","errors","Array","isArray","includeErrors","length","some","err","includes","JsonValidators","multipleOf","report","schema","json","validateOptions","stringMultipleOf","String","scale","Math","pow","indexOf","whatIs","addError","maximum","exclusiveMaximum","minimum","exclusiveMinimum","maxLength","ucs2decode","minLength","pattern","RegExp","test","additionalItems","items","maxItems","minItems","uniqueItems","matches","isUniqueArray","maxProperties","keysCount","Object","keys","minProperties","required","idx","requiredPropertyName","undefined","additionalProperties","properties","patternProperties","call","s","p","pp","difference","regExp","idx2","splice","idx3","assumeAdditional","io","idx4","dependencies","dependencyName","dependencyDefinition","exports","validate","enum","match","caseInsensitiveMatch","areEqual","caseInsensitiveComparison","error","enumCaseInsensitiveComparison","type","jsonType","allOf","validateResult","breakOnFirstError","anyOf","subReports","passed","subReport","push","oneOf","passes","maxErrors","not","definitions","format","formatValidatorFn","pathBeforeAsync","clone","path","addAsyncTask","result","backup","ignoreUnknownFormats","recurseArray","pop","recurseObject","m","propertyValue","regexString","commonErrorMessage","to","isRoot","rootSchema","$ref","maxRefs","__$refResolved","Error","customValidator"],"mappings":"AAAA;;AAEA,IAAIA,gBAAgB,GAAGC,OAAO,CAAC,oBAAD,CAA9B;AAAA,IACIC,MAAM,GAAaD,OAAO,CAAC,UAAD,CAD9B;AAAA,IAEIE,KAAK,GAAcF,OAAO,CAAC,SAAD,CAF9B;;AAIA,IAAIG,kBAAkB,GAAG,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAChD,SAAOD,OAAO,IACVE,KAAK,CAACC,OAAN,CAAcH,OAAO,CAACI,aAAtB,CADG,IAEHJ,OAAO,CAACI,aAAR,CAAsBC,MAAtB,GAA+B,CAF5B,IAGH,CAACJ,MAAM,CAACK,IAAP,CAAY,UAAUC,GAAV,EAAe;AAAE,WAAOP,OAAO,CAACI,aAAR,CAAsBI,QAAtB,CAA+BD,GAA/B,CAAP;AAA4C,GAAzE,CAHL;AAIH,CALD;;AAOA,IAAIE,cAAc,GAAG;AACjBC,EAAAA,UAAU,EAAE,UAAUC,MAAV,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgC;AACxC;AACA,QAAId,kBAAkB,CAAC,KAAKe,eAAN,EAAuB,CAAC,aAAD,CAAvB,CAAtB,EAA+D;AAC3D;AACH;;AACD,QAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC1B;AACH;;AAED,QAAIE,gBAAgB,GAAGC,MAAM,CAACJ,MAAM,CAACF,UAAR,CAA7B;AACA,QAAIO,KAAK,GAAGC,IAAI,CAACC,GAAL,CAAS,EAAT,EAAaJ,gBAAgB,CAACV,MAAjB,GAA0BU,gBAAgB,CAACK,OAAjB,CAAyB,GAAzB,CAA1B,GAA0D,CAAvE,CAAZ;;AACA,QAAItB,KAAK,CAACuB,MAAN,CAAcR,IAAI,GAAGI,KAAR,IAAkBL,MAAM,CAACF,UAAP,GAAoBO,KAAtC,CAAb,MAA+D,SAAnE,EAA8E;AAC1EN,MAAAA,MAAM,CAACW,QAAP,CAAgB,aAAhB,EAA+B,CAACT,IAAD,EAAOD,MAAM,CAACF,UAAd,CAA/B,EAA0D,IAA1D,EAAgEE,MAAhE;AACH;AACJ,GAfgB;AAgBjBW,EAAAA,OAAO,EAAE,UAAUZ,MAAV,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgC;AACrC;AACA,QAAId,kBAAkB,CAAC,KAAKe,eAAN,EAAuB,CAAC,SAAD,EAAY,mBAAZ,CAAvB,CAAtB,EAAgF;AAC5E;AACH;;AACD,QAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC1B;AACH;;AACD,QAAID,MAAM,CAACY,gBAAP,KAA4B,IAAhC,EAAsC;AAClC,UAAIX,IAAI,GAAGD,MAAM,CAACW,OAAlB,EAA2B;AACvBZ,QAAAA,MAAM,CAACW,QAAP,CAAgB,SAAhB,EAA2B,CAACT,IAAD,EAAOD,MAAM,CAACW,OAAd,CAA3B,EAAmD,IAAnD,EAAyDX,MAAzD;AACH;AACJ,KAJD,MAIO;AACH,UAAIC,IAAI,IAAID,MAAM,CAACW,OAAnB,EAA4B;AACxBZ,QAAAA,MAAM,CAACW,QAAP,CAAgB,mBAAhB,EAAqC,CAACT,IAAD,EAAOD,MAAM,CAACW,OAAd,CAArC,EAA6D,IAA7D,EAAmEX,MAAnE;AACH;AACJ;AACJ,GAjCgB;AAkCjBY,EAAAA,gBAAgB,EAAE,YAAY,CAC1B;AACH,GApCgB;AAqCjBC,EAAAA,OAAO,EAAE,UAAUd,MAAV,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgC;AACrC;AACA,QAAId,kBAAkB,CAAC,KAAKe,eAAN,EAAuB,CAAC,SAAD,EAAY,mBAAZ,CAAvB,CAAtB,EAAgF;AAC5E;AACH;;AACD,QAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC1B;AACH;;AACD,QAAID,MAAM,CAACc,gBAAP,KAA4B,IAAhC,EAAsC;AAClC,UAAIb,IAAI,GAAGD,MAAM,CAACa,OAAlB,EAA2B;AACvBd,QAAAA,MAAM,CAACW,QAAP,CAAgB,SAAhB,EAA2B,CAACT,IAAD,EAAOD,MAAM,CAACa,OAAd,CAA3B,EAAmD,IAAnD,EAAyDb,MAAzD;AACH;AACJ,KAJD,MAIO;AACH,UAAIC,IAAI,IAAID,MAAM,CAACa,OAAnB,EAA4B;AACxBd,QAAAA,MAAM,CAACW,QAAP,CAAgB,mBAAhB,EAAqC,CAACT,IAAD,EAAOD,MAAM,CAACa,OAAd,CAArC,EAA6D,IAA7D,EAAmEb,MAAnE;AACH;AACJ;AACJ,GAtDgB;AAuDjBc,EAAAA,gBAAgB,EAAE,YAAY,CAC1B;AACH,GAzDgB;AA0DjBC,EAAAA,SAAS,EAAE,UAAUhB,MAAV,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgC;AACvC;AACA,QAAId,kBAAkB,CAAC,KAAKe,eAAN,EAAuB,CAAC,YAAD,CAAvB,CAAtB,EAA8D;AAC1D;AACH;;AACD,QAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC1B;AACH;;AACD,QAAIf,KAAK,CAAC8B,UAAN,CAAiBf,IAAjB,EAAuBR,MAAvB,GAAgCO,MAAM,CAACe,SAA3C,EAAsD;AAClDhB,MAAAA,MAAM,CAACW,QAAP,CAAgB,YAAhB,EAA8B,CAACT,IAAI,CAACR,MAAN,EAAcO,MAAM,CAACe,SAArB,CAA9B,EAA+D,IAA/D,EAAqEf,MAArE;AACH;AACJ,GArEgB;AAsEjBiB,EAAAA,SAAS,EAAE,UAAUlB,MAAV,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgC;AACvC;AACA,QAAId,kBAAkB,CAAC,KAAKe,eAAN,EAAuB,CAAC,YAAD,CAAvB,CAAtB,EAA8D;AAC1D;AACH;;AACD,QAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC1B;AACH;;AACD,QAAIf,KAAK,CAAC8B,UAAN,CAAiBf,IAAjB,EAAuBR,MAAvB,GAAgCO,MAAM,CAACiB,SAA3C,EAAsD;AAClDlB,MAAAA,MAAM,CAACW,QAAP,CAAgB,YAAhB,EAA8B,CAACT,IAAI,CAACR,MAAN,EAAcO,MAAM,CAACiB,SAArB,CAA9B,EAA+D,IAA/D,EAAqEjB,MAArE;AACH;AACJ,GAjFgB;AAkFjBkB,EAAAA,OAAO,EAAE,UAAUnB,MAAV,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgC;AACrC;AACA,QAAId,kBAAkB,CAAC,KAAKe,eAAN,EAAuB,CAAC,SAAD,CAAvB,CAAtB,EAA2D;AACvD;AACH;;AACD,QAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC1B;AACH;;AACD,QAAIkB,MAAM,CAACnB,MAAM,CAACkB,OAAR,CAAN,CAAuBE,IAAvB,CAA4BnB,IAA5B,MAAsC,KAA1C,EAAiD;AAC7CF,MAAAA,MAAM,CAACW,QAAP,CAAgB,SAAhB,EAA2B,CAACV,MAAM,CAACkB,OAAR,EAAiBjB,IAAjB,CAA3B,EAAmD,IAAnD,EAAyDD,MAAzD;AACH;AACJ,GA7FgB;AA8FjBqB,EAAAA,eAAe,EAAE,UAAUtB,MAAV,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgC;AAC7C;AACA,QAAId,kBAAkB,CAAC,KAAKe,eAAN,EAAuB,CAAC,wBAAD,CAAvB,CAAtB,EAA0E;AACtE;AACH;;AACD,QAAI,CAACZ,KAAK,CAACC,OAAN,CAAcU,IAAd,CAAL,EAA0B;AACtB;AACH,KAP4C,CAQ7C;AACA;;;AACA,QAAID,MAAM,CAACqB,eAAP,KAA2B,KAA3B,IAAoC/B,KAAK,CAACC,OAAN,CAAcS,MAAM,CAACsB,KAArB,CAAxC,EAAqE;AACjE,UAAIrB,IAAI,CAACR,MAAL,GAAcO,MAAM,CAACsB,KAAP,CAAa7B,MAA/B,EAAuC;AACnCM,QAAAA,MAAM,CAACW,QAAP,CAAgB,wBAAhB,EAA0C,IAA1C,EAAgD,IAAhD,EAAsDV,MAAtD;AACH;AACJ;AACJ,GA7GgB;AA8GjBsB,EAAAA,KAAK,EAAE,YAAY;AAAE;AACjB;AACH,GAhHgB;AAiHjBC,EAAAA,QAAQ,EAAE,UAAUxB,MAAV,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgC;AACtC;AACA,QAAId,kBAAkB,CAAC,KAAKe,eAAN,EAAuB,CAAC,mBAAD,CAAvB,CAAtB,EAAqE;AACjE;AACH;;AACD,QAAI,CAACZ,KAAK,CAACC,OAAN,CAAcU,IAAd,CAAL,EAA0B;AACtB;AACH;;AACD,QAAIA,IAAI,CAACR,MAAL,GAAcO,MAAM,CAACuB,QAAzB,EAAmC;AAC/BxB,MAAAA,MAAM,CAACW,QAAP,CAAgB,mBAAhB,EAAqC,CAACT,IAAI,CAACR,MAAN,EAAcO,MAAM,CAACuB,QAArB,CAArC,EAAqE,IAArE,EAA2EvB,MAA3E;AACH;AACJ,GA5HgB;AA6HjBwB,EAAAA,QAAQ,EAAE,UAAUzB,MAAV,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgC;AACtC;AACA,QAAId,kBAAkB,CAAC,KAAKe,eAAN,EAAuB,CAAC,oBAAD,CAAvB,CAAtB,EAAsE;AAClE;AACH;;AACD,QAAI,CAACZ,KAAK,CAACC,OAAN,CAAcU,IAAd,CAAL,EAA0B;AACtB;AACH;;AACD,QAAIA,IAAI,CAACR,MAAL,GAAcO,MAAM,CAACwB,QAAzB,EAAmC;AAC/BzB,MAAAA,MAAM,CAACW,QAAP,CAAgB,oBAAhB,EAAsC,CAACT,IAAI,CAACR,MAAN,EAAcO,MAAM,CAACwB,QAArB,CAAtC,EAAsE,IAAtE,EAA4ExB,MAA5E;AACH;AACJ,GAxIgB;AAyIjByB,EAAAA,WAAW,EAAE,UAAU1B,MAAV,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgC;AACzC;AACA,QAAId,kBAAkB,CAAC,KAAKe,eAAN,EAAuB,CAAC,cAAD,CAAvB,CAAtB,EAAgE;AAC5D;AACH;;AACD,QAAI,CAACZ,KAAK,CAACC,OAAN,CAAcU,IAAd,CAAL,EAA0B;AACtB;AACH;;AACD,QAAID,MAAM,CAACyB,WAAP,KAAuB,IAA3B,EAAiC;AAC7B,UAAIC,OAAO,GAAG,EAAd;;AACA,UAAIxC,KAAK,CAACyC,aAAN,CAAoB1B,IAApB,EAA0ByB,OAA1B,MAAuC,KAA3C,EAAkD;AAC9C3B,QAAAA,MAAM,CAACW,QAAP,CAAgB,cAAhB,EAAgCgB,OAAhC,EAAyC,IAAzC,EAA+C1B,MAA/C;AACH;AACJ;AACJ,GAvJgB;AAwJjB4B,EAAAA,aAAa,EAAE,UAAU7B,MAAV,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgC;AAC3C;AACA,QAAId,kBAAkB,CAAC,KAAKe,eAAN,EAAuB,CAAC,2BAAD,CAAvB,CAAtB,EAA6E;AACzE;AACH;;AACD,QAAIhB,KAAK,CAACuB,MAAN,CAAaR,IAAb,MAAuB,QAA3B,EAAqC;AACjC;AACH;;AACD,QAAI4B,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAY9B,IAAZ,EAAkBR,MAAlC;;AACA,QAAIoC,SAAS,GAAG7B,MAAM,CAAC4B,aAAvB,EAAsC;AAClC7B,MAAAA,MAAM,CAACW,QAAP,CAAgB,2BAAhB,EAA6C,CAACmB,SAAD,EAAY7B,MAAM,CAAC4B,aAAnB,CAA7C,EAAgF,IAAhF,EAAsF5B,MAAtF;AACH;AACJ,GApKgB;AAqKjBgC,EAAAA,aAAa,EAAE,UAAUjC,MAAV,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgC;AAC3C;AACA,QAAId,kBAAkB,CAAC,KAAKe,eAAN,EAAuB,CAAC,2BAAD,CAAvB,CAAtB,EAA6E;AACzE;AACH;;AACD,QAAIhB,KAAK,CAACuB,MAAN,CAAaR,IAAb,MAAuB,QAA3B,EAAqC;AACjC;AACH;;AACD,QAAI4B,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAY9B,IAAZ,EAAkBR,MAAlC;;AACA,QAAIoC,SAAS,GAAG7B,MAAM,CAACgC,aAAvB,EAAsC;AAClCjC,MAAAA,MAAM,CAACW,QAAP,CAAgB,2BAAhB,EAA6C,CAACmB,SAAD,EAAY7B,MAAM,CAACgC,aAAnB,CAA7C,EAAgF,IAAhF,EAAsFhC,MAAtF;AACH;AACJ,GAjLgB;AAkLjBiC,EAAAA,QAAQ,EAAE,UAAUlC,MAAV,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgC;AACtC;AACA,QAAId,kBAAkB,CAAC,KAAKe,eAAN,EAAuB,CAAC,kCAAD,CAAvB,CAAtB,EAAoF;AAChF;AACH;;AACD,QAAIhB,KAAK,CAACuB,MAAN,CAAaR,IAAb,MAAuB,QAA3B,EAAqC;AACjC;AACH;;AACD,QAAIiC,GAAG,GAAGlC,MAAM,CAACiC,QAAP,CAAgBxC,MAA1B;;AACA,WAAOyC,GAAG,EAAV,EAAc;AACV,UAAIC,oBAAoB,GAAGnC,MAAM,CAACiC,QAAP,CAAgBC,GAAhB,CAA3B;;AACA,UAAIjC,IAAI,CAACkC,oBAAD,CAAJ,KAA+BC,SAAnC,EAA8C;AAC1CrC,QAAAA,MAAM,CAACW,QAAP,CAAgB,kCAAhB,EAAoD,CAACyB,oBAAD,CAApD,EAA4E,IAA5E,EAAkFnC,MAAlF;AACH;AACJ;AACJ,GAjMgB;AAkMjBqC,EAAAA,oBAAoB,EAAE,UAAUtC,MAAV,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgC;AAClD;AACA,QAAID,MAAM,CAACsC,UAAP,KAAsBF,SAAtB,IAAmCpC,MAAM,CAACuC,iBAAP,KAA6BH,SAApE,EAA+E;AAC3E,aAAOvC,cAAc,CAACyC,UAAf,CAA0BE,IAA1B,CAA+B,IAA/B,EAAqCzC,MAArC,EAA6CC,MAA7C,EAAqDC,IAArD,CAAP;AACH;AACJ,GAvMgB;AAwMjBsC,EAAAA,iBAAiB,EAAE,UAAUxC,MAAV,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgC;AAC/C;AACA,QAAID,MAAM,CAACsC,UAAP,KAAsBF,SAA1B,EAAqC;AACjC,aAAOvC,cAAc,CAACyC,UAAf,CAA0BE,IAA1B,CAA+B,IAA/B,EAAqCzC,MAArC,EAA6CC,MAA7C,EAAqDC,IAArD,CAAP;AACH;AACJ,GA7MgB;AA8MjBqC,EAAAA,UAAU,EAAE,UAAUvC,MAAV,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgC;AACxC;AACA,QAAId,kBAAkB,CAAC,KAAKe,eAAN,EAAuB,CAAC,8BAAD,CAAvB,CAAtB,EAAgF;AAC5E;AACH;;AACD,QAAIhB,KAAK,CAACuB,MAAN,CAAaR,IAAb,MAAuB,QAA3B,EAAqC;AACjC;AACH;;AACD,QAAIqC,UAAU,GAAGtC,MAAM,CAACsC,UAAP,KAAsBF,SAAtB,GAAkCpC,MAAM,CAACsC,UAAzC,GAAsD,EAAvE;AACA,QAAIC,iBAAiB,GAAGvC,MAAM,CAACuC,iBAAP,KAA6BH,SAA7B,GAAyCpC,MAAM,CAACuC,iBAAhD,GAAoE,EAA5F;;AACA,QAAIvC,MAAM,CAACqC,oBAAP,KAAgC,KAApC,EAA2C;AACvC;AACA,UAAII,CAAC,GAAGX,MAAM,CAACC,IAAP,CAAY9B,IAAZ,CAAR,CAFuC,CAGvC;;AACA,UAAIyC,CAAC,GAAGZ,MAAM,CAACC,IAAP,CAAYO,UAAZ,CAAR,CAJuC,CAKvC;;AACA,UAAIK,EAAE,GAAGb,MAAM,CAACC,IAAP,CAAYQ,iBAAZ,CAAT,CANuC,CAOvC;;AACAE,MAAAA,CAAC,GAAGvD,KAAK,CAAC0D,UAAN,CAAiBH,CAAjB,EAAoBC,CAApB,CAAJ,CARuC,CASvC;;AACA,UAAIR,GAAG,GAAGS,EAAE,CAAClD,MAAb;;AACA,aAAOyC,GAAG,EAAV,EAAc;AACV,YAAIW,MAAM,GAAG1B,MAAM,CAACwB,EAAE,CAACT,GAAD,CAAH,CAAnB;AAAA,YACIY,IAAI,GAAGL,CAAC,CAAChD,MADb;;AAEA,eAAOqD,IAAI,EAAX,EAAe;AACX,cAAID,MAAM,CAACzB,IAAP,CAAYqB,CAAC,CAACK,IAAD,CAAb,MAAyB,IAA7B,EAAmC;AAC/BL,YAAAA,CAAC,CAACM,MAAF,CAASD,IAAT,EAAe,CAAf;AACH;AACJ;AACJ,OAnBsC,CAoBvC;;;AACA,UAAIL,CAAC,CAAChD,MAAF,GAAW,CAAf,EAAkB;AACd;AACA,YAAIuD,IAAI,GAAG,KAAK5D,OAAL,CAAa6D,gBAAb,CAA8BxD,MAAzC;;AACA,YAAIuD,IAAJ,EAAU;AACN,iBAAOA,IAAI,EAAX,EAAe;AACX,gBAAIE,EAAE,GAAGT,CAAC,CAACjC,OAAF,CAAU,KAAKpB,OAAL,CAAa6D,gBAAb,CAA8BD,IAA9B,CAAV,CAAT;;AACA,gBAAIE,EAAE,KAAK,CAAC,CAAZ,EAAe;AACXT,cAAAA,CAAC,CAACM,MAAF,CAASG,EAAT,EAAa,CAAb;AACH;AACJ;AACJ;;AACD,YAAIC,IAAI,GAAGV,CAAC,CAAChD,MAAb;;AACA,YAAI0D,IAAJ,EAAU;AACN,iBAAOA,IAAI,EAAX,EAAe;AACXpD,YAAAA,MAAM,CAACW,QAAP,CAAgB,8BAAhB,EAAgD,CAAC+B,CAAC,CAACU,IAAD,CAAF,CAAhD,EAA2D,IAA3D,EAAiEnD,MAAjE;AACH;AACJ;AACJ;AACJ;AACJ,GAhQgB;AAiQjBoD,EAAAA,YAAY,EAAE,UAAUrD,MAAV,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgC;AAC1C;AACA,QAAId,kBAAkB,CAAC,KAAKe,eAAN,EAAuB,CAAC,uBAAD,CAAvB,CAAtB,EAAyE;AACrE;AACH;;AACD,QAAIhB,KAAK,CAACuB,MAAN,CAAaR,IAAb,MAAuB,QAA3B,EAAqC;AACjC;AACH;;AAED,QAAI8B,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAY/B,MAAM,CAACoD,YAAnB,CAAX;AAAA,QACIlB,GAAG,GAAGH,IAAI,CAACtC,MADf;;AAGA,WAAOyC,GAAG,EAAV,EAAc;AACV;AACA,UAAImB,cAAc,GAAGtB,IAAI,CAACG,GAAD,CAAzB;;AACA,UAAIjC,IAAI,CAACoD,cAAD,CAAR,EAA0B;AACtB,YAAIC,oBAAoB,GAAGtD,MAAM,CAACoD,YAAP,CAAoBC,cAApB,CAA3B;;AACA,YAAInE,KAAK,CAACuB,MAAN,CAAa6C,oBAAb,MAAuC,QAA3C,EAAqD;AACjD;AACAC,UAAAA,OAAO,CAACC,QAAR,CAAiBhB,IAAjB,CAAsB,IAAtB,EAA4BzC,MAA5B,EAAoCuD,oBAApC,EAA0DrD,IAA1D;AACH,SAHD,MAGO;AAAE;AACL;AACA,cAAI6C,IAAI,GAAGQ,oBAAoB,CAAC7D,MAAhC;;AACA,iBAAOqD,IAAI,EAAX,EAAe;AACX,gBAAIX,oBAAoB,GAAGmB,oBAAoB,CAACR,IAAD,CAA/C;;AACA,gBAAI7C,IAAI,CAACkC,oBAAD,CAAJ,KAA+BC,SAAnC,EAA8C;AAC1CrC,cAAAA,MAAM,CAACW,QAAP,CAAgB,uBAAhB,EAAyC,CAACyB,oBAAD,EAAuBkB,cAAvB,CAAzC,EAAiF,IAAjF,EAAuFrD,MAAvF;AACH;AACJ;AACJ;AACJ;AACJ;AACJ,GAjSgB;AAkSjByD,EAAAA,IAAI,EAAE,UAAU1D,MAAV,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgC;AAClC;AACA,QAAId,kBAAkB,CAAC,KAAKe,eAAN,EAAuB,CAAC,oBAAD,EAAuB,eAAvB,CAAvB,CAAtB,EAAuF;AACnF;AACH;;AACD,QAAIwD,KAAK,GAAG,KAAZ;AAAA,QACIC,oBAAoB,GAAG,KAD3B;AAAA,QAEIzB,GAAG,GAAGlC,MAAM,CAACyD,IAAP,CAAYhE,MAFtB;;AAGA,WAAOyC,GAAG,EAAV,EAAc;AACV,UAAIhD,KAAK,CAAC0E,QAAN,CAAe3D,IAAf,EAAqBD,MAAM,CAACyD,IAAP,CAAYvB,GAAZ,CAArB,CAAJ,EAA4C;AACxCwB,QAAAA,KAAK,GAAG,IAAR;AACA;AACH,OAHD,MAGO,IAAIxE,KAAK,CAAC0E,QAAN,CAAe3D,IAAf,EAAqBD,MAAM,CAACyD,IAAP,CAAYvB,GAAZ,CAArB,GAAwC;AAAE2B,QAAAA,yBAAyB,EAAE;AAA7B,OAA5C,EAAiF;AACpFF,QAAAA,oBAAoB,GAAG,IAAvB;AACH;AACJ;;AAED,QAAID,KAAK,KAAK,KAAd,EAAqB;AACjB,UAAII,KAAK,GAAGH,oBAAoB,IAAI,KAAKvE,OAAL,CAAa2E,6BAArC,GAAqE,oBAArE,GAA4F,eAAxG;AACAhE,MAAAA,MAAM,CAACW,QAAP,CAAgBoD,KAAhB,EAAuB,CAAC7D,IAAD,CAAvB,EAA+B,IAA/B,EAAqCD,MAArC;AACH;AACJ,GAvTgB;AAwTjBgE,EAAAA,IAAI,EAAE,UAAUjE,MAAV,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgC;AAClC;AACA,QAAId,kBAAkB,CAAC,KAAKe,eAAN,EAAuB,CAAC,cAAD,CAAvB,CAAtB,EAAgE;AAC5D;AACH;;AACD,QAAI+D,QAAQ,GAAG/E,KAAK,CAACuB,MAAN,CAAaR,IAAb,CAAf;;AACA,QAAI,OAAOD,MAAM,CAACgE,IAAd,KAAuB,QAA3B,EAAqC;AACjC,UAAIC,QAAQ,KAAKjE,MAAM,CAACgE,IAApB,KAA6BC,QAAQ,KAAK,SAAb,IAA0BjE,MAAM,CAACgE,IAAP,KAAgB,QAAvE,CAAJ,EAAsF;AAClFjE,QAAAA,MAAM,CAACW,QAAP,CAAgB,cAAhB,EAAgC,CAACV,MAAM,CAACgE,IAAR,EAAcC,QAAd,CAAhC,EAAyD,IAAzD,EAA+DjE,MAA/D;AACH;AACJ,KAJD,MAIO;AACH,UAAIA,MAAM,CAACgE,IAAP,CAAYxD,OAAZ,CAAoByD,QAApB,MAAkC,CAAC,CAAnC,KAAyCA,QAAQ,KAAK,SAAb,IAA0BjE,MAAM,CAACgE,IAAP,CAAYxD,OAAZ,CAAoB,QAApB,MAAkC,CAAC,CAAtG,CAAJ,EAA8G;AAC1GT,QAAAA,MAAM,CAACW,QAAP,CAAgB,cAAhB,EAAgC,CAACV,MAAM,CAACgE,IAAR,EAAcC,QAAd,CAAhC,EAAyD,IAAzD,EAA+DjE,MAA/D;AACH;AACJ;AACJ,GAvUgB;AAwUjBkE,EAAAA,KAAK,EAAE,UAAUnE,MAAV,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgC;AACnC;AACA,QAAIiC,GAAG,GAAGlC,MAAM,CAACkE,KAAP,CAAazE,MAAvB;;AACA,WAAOyC,GAAG,EAAV,EAAc;AACV,UAAIiC,cAAc,GAAGZ,OAAO,CAACC,QAAR,CAAiBhB,IAAjB,CAAsB,IAAtB,EAA4BzC,MAA5B,EAAoCC,MAAM,CAACkE,KAAP,CAAahC,GAAb,CAApC,EAAuDjC,IAAvD,CAArB;;AACA,UAAI,KAAKb,OAAL,CAAagF,iBAAb,IAAkCD,cAAc,KAAK,KAAzD,EAAgE;AAC5D;AACH;AACJ;AACJ,GAjVgB;AAkVjBE,EAAAA,KAAK,EAAE,UAAUtE,MAAV,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgC;AACnC;AACA,QAAIqE,UAAU,GAAG,EAAjB;AAAA,QACIC,MAAM,GAAG,KADb;AAAA,QAEIrC,GAAG,GAAGlC,MAAM,CAACqE,KAAP,CAAa5E,MAFvB;;AAIA,WAAOyC,GAAG,MAAMqC,MAAM,KAAK,KAA3B,EAAkC;AAC9B,UAAIC,SAAS,GAAG,IAAIvF,MAAJ,CAAWc,MAAX,CAAhB;AACAuE,MAAAA,UAAU,CAACG,IAAX,CAAgBD,SAAhB;AACAD,MAAAA,MAAM,GAAGhB,OAAO,CAACC,QAAR,CAAiBhB,IAAjB,CAAsB,IAAtB,EAA4BgC,SAA5B,EAAuCxE,MAAM,CAACqE,KAAP,CAAanC,GAAb,CAAvC,EAA0DjC,IAA1D,CAAT;AACH;;AAED,QAAIsE,MAAM,KAAK,KAAf,EAAsB;AAClBxE,MAAAA,MAAM,CAACW,QAAP,CAAgB,gBAAhB,EAAkC0B,SAAlC,EAA6CkC,UAA7C,EAAyDtE,MAAzD;AACH;AACJ,GAjWgB;AAkWjB0E,EAAAA,KAAK,EAAE,UAAU3E,MAAV,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgC;AACnC;AACA,QAAI0E,MAAM,GAAG,CAAb;AAAA,QACIL,UAAU,GAAG,EADjB;AAAA,QAEIpC,GAAG,GAAGlC,MAAM,CAAC0E,KAAP,CAAajF,MAFvB;;AAIA,WAAOyC,GAAG,EAAV,EAAc;AACV,UAAIsC,SAAS,GAAG,IAAIvF,MAAJ,CAAWc,MAAX,EAAmB;AAAE6E,QAAAA,SAAS,EAAE;AAAb,OAAnB,CAAhB;AACAN,MAAAA,UAAU,CAACG,IAAX,CAAgBD,SAAhB;;AACA,UAAIjB,OAAO,CAACC,QAAR,CAAiBhB,IAAjB,CAAsB,IAAtB,EAA4BgC,SAA5B,EAAuCxE,MAAM,CAAC0E,KAAP,CAAaxC,GAAb,CAAvC,EAA0DjC,IAA1D,MAAoE,IAAxE,EAA8E;AAC1E0E,QAAAA,MAAM;AACT;AACJ;;AAED,QAAIA,MAAM,KAAK,CAAf,EAAkB;AACd5E,MAAAA,MAAM,CAACW,QAAP,CAAgB,gBAAhB,EAAkC0B,SAAlC,EAA6CkC,UAA7C,EAAyDtE,MAAzD;AACH,KAFD,MAEO,IAAI2E,MAAM,GAAG,CAAb,EAAgB;AACnB5E,MAAAA,MAAM,CAACW,QAAP,CAAgB,iBAAhB,EAAmC,IAAnC,EAAyC,IAAzC,EAA+CV,MAA/C;AACH;AACJ,GArXgB;AAsXjB6E,EAAAA,GAAG,EAAE,UAAU9E,MAAV,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgC;AACjC;AACA,QAAIuE,SAAS,GAAG,IAAIvF,MAAJ,CAAWc,MAAX,CAAhB;;AACA,QAAIwD,OAAO,CAACC,QAAR,CAAiBhB,IAAjB,CAAsB,IAAtB,EAA4BgC,SAA5B,EAAuCxE,MAAM,CAAC6E,GAA9C,EAAmD5E,IAAnD,MAA6D,IAAjE,EAAuE;AACnEF,MAAAA,MAAM,CAACW,QAAP,CAAgB,YAAhB,EAA8B,IAA9B,EAAoC,IAApC,EAA0CV,MAA1C;AACH;AACJ,GA5XgB;AA6XjB8E,EAAAA,WAAW,EAAE,YAAY;AAAE;AACvB;AACA;AACH,GAhYgB;AAiYjBC,EAAAA,MAAM,EAAE,UAAUhF,MAAV,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgC;AACpC;AACA,QAAI+E,iBAAiB,GAAGjG,gBAAgB,CAACiB,MAAM,CAAC+E,MAAR,CAAxC;;AACA,QAAI,OAAOC,iBAAP,KAA6B,UAAjC,EAA6C;AACzC,UAAI7F,kBAAkB,CAAC,KAAKe,eAAN,EAAuB,CAAC,gBAAD,CAAvB,CAAtB,EAAkE;AAC9D;AACH;;AACD,UAAI8E,iBAAiB,CAACvF,MAAlB,KAA6B,CAAjC,EAAoC;AAChC;AACA,YAAIwF,eAAe,GAAG/F,KAAK,CAACgG,KAAN,CAAYnF,MAAM,CAACoF,IAAnB,CAAtB;AACApF,QAAAA,MAAM,CAACqF,YAAP,CAAoBJ,iBAApB,EAAuC,CAAC/E,IAAD,CAAvC,EAA+C,UAAUoF,MAAV,EAAkB;AAC7D,cAAIA,MAAM,KAAK,IAAf,EAAqB;AACjB,gBAAIC,MAAM,GAAGvF,MAAM,CAACoF,IAApB;AACApF,YAAAA,MAAM,CAACoF,IAAP,GAAcF,eAAd;AACAlF,YAAAA,MAAM,CAACW,QAAP,CAAgB,gBAAhB,EAAkC,CAACV,MAAM,CAAC+E,MAAR,EAAgB9E,IAAhB,CAAlC,EAAyD,IAAzD,EAA+DD,MAA/D;AACAD,YAAAA,MAAM,CAACoF,IAAP,GAAcG,MAAd;AACH;AACJ,SAPD;AAQH,OAXD,MAWO;AACH;AACA,YAAIN,iBAAiB,CAACxC,IAAlB,CAAuB,IAAvB,EAA6BvC,IAA7B,MAAuC,IAA3C,EAAiD;AAC7CF,UAAAA,MAAM,CAACW,QAAP,CAAgB,gBAAhB,EAAkC,CAACV,MAAM,CAAC+E,MAAR,EAAgB9E,IAAhB,CAAlC,EAAyD,IAAzD,EAA+DD,MAA/D;AACH;AACJ;AACJ,KArBD,MAqBO,IAAI,KAAKZ,OAAL,CAAamG,oBAAb,KAAsC,IAA1C,EAAgD;AACnDxF,MAAAA,MAAM,CAACW,QAAP,CAAgB,gBAAhB,EAAkC,CAACV,MAAM,CAAC+E,MAAR,CAAlC,EAAmD,IAAnD,EAAyD/E,MAAzD;AACH;AACJ;AA5ZgB,CAArB;;AA+ZA,IAAIwF,YAAY,GAAG,UAAUzF,MAAV,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgC;AAC/C;AAEA,MAAIiC,GAAG,GAAGjC,IAAI,CAACR,MAAf,CAH+C,CAK/C;AACA;AACA;AACA;;AACA,MAAIH,KAAK,CAACC,OAAN,CAAcS,MAAM,CAACsB,KAArB,CAAJ,EAAiC;AAE7B,WAAOY,GAAG,EAAV,EAAc;AACV;AACA,UAAIA,GAAG,GAAGlC,MAAM,CAACsB,KAAP,CAAa7B,MAAvB,EAA+B;AAC3BM,QAAAA,MAAM,CAACoF,IAAP,CAAYV,IAAZ,CAAiBvC,GAAjB;AACAqB,QAAAA,OAAO,CAACC,QAAR,CAAiBhB,IAAjB,CAAsB,IAAtB,EAA4BzC,MAA5B,EAAoCC,MAAM,CAACsB,KAAP,CAAaY,GAAb,CAApC,EAAuDjC,IAAI,CAACiC,GAAD,CAA3D;AACAnC,QAAAA,MAAM,CAACoF,IAAP,CAAYM,GAAZ;AACH,OAJD,MAIO;AACH;AACA,YAAI,OAAOzF,MAAM,CAACqB,eAAd,KAAkC,QAAtC,EAAgD;AAC5CtB,UAAAA,MAAM,CAACoF,IAAP,CAAYV,IAAZ,CAAiBvC,GAAjB;AACAqB,UAAAA,OAAO,CAACC,QAAR,CAAiBhB,IAAjB,CAAsB,IAAtB,EAA4BzC,MAA5B,EAAoCC,MAAM,CAACqB,eAA3C,EAA4DpB,IAAI,CAACiC,GAAD,CAAhE;AACAnC,UAAAA,MAAM,CAACoF,IAAP,CAAYM,GAAZ;AACH;AACJ;AACJ;AAEJ,GAlBD,MAkBO,IAAI,OAAOzF,MAAM,CAACsB,KAAd,KAAwB,QAA5B,EAAsC;AAEzC;AACA;AACA,WAAOY,GAAG,EAAV,EAAc;AACVnC,MAAAA,MAAM,CAACoF,IAAP,CAAYV,IAAZ,CAAiBvC,GAAjB;AACAqB,MAAAA,OAAO,CAACC,QAAR,CAAiBhB,IAAjB,CAAsB,IAAtB,EAA4BzC,MAA5B,EAAoCC,MAAM,CAACsB,KAA3C,EAAkDrB,IAAI,CAACiC,GAAD,CAAtD;AACAnC,MAAAA,MAAM,CAACoF,IAAP,CAAYM,GAAZ;AACH;AAEJ;AACJ,CAtCD;;AAwCA,IAAIC,aAAa,GAAG,UAAU3F,MAAV,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgC;AAChD;AAEA;AACA;AACA,MAAIoC,oBAAoB,GAAGrC,MAAM,CAACqC,oBAAlC;;AACA,MAAIA,oBAAoB,KAAK,IAAzB,IAAiCA,oBAAoB,KAAKD,SAA9D,EAAyE;AACrEC,IAAAA,oBAAoB,GAAG,EAAvB;AACH,GAR+C,CAUhD;;;AACA,MAAIK,CAAC,GAAG1C,MAAM,CAACsC,UAAP,GAAoBR,MAAM,CAACC,IAAP,CAAY/B,MAAM,CAACsC,UAAnB,CAApB,GAAqD,EAA7D,CAXgD,CAahD;;AACA,MAAIK,EAAE,GAAG3C,MAAM,CAACuC,iBAAP,GAA2BT,MAAM,CAACC,IAAP,CAAY/B,MAAM,CAACuC,iBAAnB,CAA3B,GAAmE,EAA5E,CAdgD,CAgBhD;;AACA,MAAIR,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAY9B,IAAZ,CAAX;AAAA,MACIiC,GAAG,GAAGH,IAAI,CAACtC,MADf;;AAGA,SAAOyC,GAAG,EAAV,EAAc;AACV,QAAIyD,CAAC,GAAG5D,IAAI,CAACG,GAAD,CAAZ;AAAA,QACI0D,aAAa,GAAG3F,IAAI,CAAC0F,CAAD,CADxB,CADU,CAIV;;AACA,QAAIlD,CAAC,GAAG,EAAR,CALU,CAOV;;AACA,QAAIC,CAAC,CAAClC,OAAF,CAAUmF,CAAV,MAAiB,CAAC,CAAtB,EAAyB;AACrBlD,MAAAA,CAAC,CAACgC,IAAF,CAAOzE,MAAM,CAACsC,UAAP,CAAkBqD,CAAlB,CAAP;AACH,KAVS,CAYV;;;AACA,QAAI7C,IAAI,GAAGH,EAAE,CAAClD,MAAd;;AACA,WAAOqD,IAAI,EAAX,EAAe;AACX,UAAI+C,WAAW,GAAGlD,EAAE,CAACG,IAAD,CAApB;;AACA,UAAI3B,MAAM,CAAC0E,WAAD,CAAN,CAAoBzE,IAApB,CAAyBuE,CAAzB,MAAgC,IAApC,EAA0C;AACtClD,QAAAA,CAAC,CAACgC,IAAF,CAAOzE,MAAM,CAACuC,iBAAP,CAAyBsD,WAAzB,CAAP;AACH;AACJ,KAnBS,CAqBV;;;AACA,QAAIpD,CAAC,CAAChD,MAAF,KAAa,CAAb,IAAkB4C,oBAAoB,KAAK,KAA/C,EAAsD;AAClDI,MAAAA,CAAC,CAACgC,IAAF,CAAOpC,oBAAP;AACH,KAxBS,CA0BV;AACA;AACA;AAEA;;;AACAS,IAAAA,IAAI,GAAGL,CAAC,CAAChD,MAAT;;AACA,WAAOqD,IAAI,EAAX,EAAe;AACX/C,MAAAA,MAAM,CAACoF,IAAP,CAAYV,IAAZ,CAAiBkB,CAAjB;AACApC,MAAAA,OAAO,CAACC,QAAR,CAAiBhB,IAAjB,CAAsB,IAAtB,EAA4BzC,MAA5B,EAAoC0C,CAAC,CAACK,IAAD,CAArC,EAA6C8C,aAA7C;AACA7F,MAAAA,MAAM,CAACoF,IAAP,CAAYM,GAAZ;AACH;AACJ;AACJ,CA1DD;;AA4DAlC,OAAO,CAAC1D,cAAR,GAAyBA,cAAzB;AAEA;;;;;;;AAMA0D,OAAO,CAACC,QAAR,GAAmB,UAAUzD,MAAV,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgC;AAE/CF,EAAAA,MAAM,CAAC+F,kBAAP,GAA4B,+BAA5B,CAF+C,CAI/C;;AACA,MAAIC,EAAE,GAAG7G,KAAK,CAACuB,MAAN,CAAaT,MAAb,CAAT;;AACA,MAAI+F,EAAE,KAAK,QAAX,EAAqB;AACjBhG,IAAAA,MAAM,CAACW,QAAP,CAAgB,sBAAhB,EAAwC,CAACqF,EAAD,CAAxC,EAA8C,IAA9C,EAAoD/F,MAApD;AACA,WAAO,KAAP;AACH,GAT8C,CAW/C;;;AACA,MAAI+B,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAY/B,MAAZ,CAAX;;AACA,MAAI+B,IAAI,CAACtC,MAAL,KAAgB,CAApB,EAAuB;AACnB,WAAO,IAAP;AACH,GAf8C,CAiB/C;;;AACA,MAAIuG,MAAM,GAAG,KAAb;;AACA,MAAI,CAACjG,MAAM,CAACkG,UAAZ,EAAwB;AACpBlG,IAAAA,MAAM,CAACkG,UAAP,GAAoBjG,MAApB;AACAgG,IAAAA,MAAM,GAAG,IAAT;AACH,GAtB8C,CAwB/C;;;AACA,MAAIhG,MAAM,CAACkG,IAAP,KAAgB9D,SAApB,EAA+B;AAC3B;AACA,QAAI+D,OAAO,GAAG,EAAd;;AACA,WAAOnG,MAAM,CAACkG,IAAP,IAAeC,OAAO,GAAG,CAAhC,EAAmC;AAC/B,UAAI,CAACnG,MAAM,CAACoG,cAAZ,EAA4B;AACxBrG,QAAAA,MAAM,CAACW,QAAP,CAAgB,gBAAhB,EAAkC,CAACV,MAAM,CAACkG,IAAR,CAAlC,EAAiD,IAAjD,EAAuDlG,MAAvD;AACA;AACH,OAHD,MAGO,IAAIA,MAAM,CAACoG,cAAP,KAA0BpG,MAA9B,EAAsC;AACzC;AACH,OAFM,MAEA;AACHA,QAAAA,MAAM,GAAGA,MAAM,CAACoG,cAAhB;AACArE,QAAAA,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAY/B,MAAZ,CAAP;AACH;;AACDmG,MAAAA,OAAO;AACV;;AACD,QAAIA,OAAO,KAAK,CAAhB,EAAmB;AACf,YAAM,IAAIE,KAAJ,CAAU,yCAAV,CAAN;AACH;AACJ,GA3C8C,CA6C/C;;;AACA,MAAIpC,QAAQ,GAAG/E,KAAK,CAACuB,MAAN,CAAaR,IAAb,CAAf;;AACA,MAAID,MAAM,CAACgE,IAAX,EAAiB;AACbjC,IAAAA,IAAI,CAACgB,MAAL,CAAYhB,IAAI,CAACvB,OAAL,CAAa,MAAb,CAAZ,EAAkC,CAAlC;AACAX,IAAAA,cAAc,CAACmE,IAAf,CAAoBxB,IAApB,CAAyB,IAAzB,EAA+BzC,MAA/B,EAAuCC,MAAvC,EAA+CC,IAA/C;;AACA,QAAIF,MAAM,CAACV,MAAP,CAAcI,MAAd,IAAwB,KAAKL,OAAL,CAAagF,iBAAzC,EAA4D;AACxD,aAAO,KAAP;AACH;AACJ,GArD8C,CAuD/C;;;AACA,MAAIlC,GAAG,GAAGH,IAAI,CAACtC,MAAf;;AACA,SAAOyC,GAAG,EAAV,EAAc;AACV,QAAIrC,cAAc,CAACkC,IAAI,CAACG,GAAD,CAAL,CAAlB,EAA+B;AAC3BrC,MAAAA,cAAc,CAACkC,IAAI,CAACG,GAAD,CAAL,CAAd,CAA0BM,IAA1B,CAA+B,IAA/B,EAAqCzC,MAArC,EAA6CC,MAA7C,EAAqDC,IAArD;;AACA,UAAIF,MAAM,CAACV,MAAP,CAAcI,MAAd,IAAwB,KAAKL,OAAL,CAAagF,iBAAzC,EAA4D;AAAE;AAAQ;AACzE;AACJ;;AAED,MAAIrE,MAAM,CAACV,MAAP,CAAcI,MAAd,KAAyB,CAAzB,IAA8B,KAAKL,OAAL,CAAagF,iBAAb,KAAmC,KAArE,EAA4E;AACxE,QAAIH,QAAQ,KAAK,OAAjB,EAA0B;AACtBuB,MAAAA,YAAY,CAAChD,IAAb,CAAkB,IAAlB,EAAwBzC,MAAxB,EAAgCC,MAAhC,EAAwCC,IAAxC;AACH,KAFD,MAEO,IAAIgE,QAAQ,KAAK,QAAjB,EAA2B;AAC9ByB,MAAAA,aAAa,CAAClD,IAAd,CAAmB,IAAnB,EAAyBzC,MAAzB,EAAiCC,MAAjC,EAAyCC,IAAzC;AACH;AACJ;;AAED,MAAI,OAAO,KAAKb,OAAL,CAAakH,eAApB,KAAwC,UAA5C,EAAwD;AACpD,SAAKlH,OAAL,CAAakH,eAAb,CAA6B9D,IAA7B,CAAkC,IAAlC,EAAwCzC,MAAxC,EAAgDC,MAAhD,EAAwDC,IAAxD;AACH,GA1E8C,CA4E/C;;;AACA,MAAI+F,MAAJ,EAAY;AACRjG,IAAAA,MAAM,CAACkG,UAAP,GAAoB7D,SAApB;AACH,GA/E8C,CAiF/C;;;AACA,SAAOrC,MAAM,CAACV,MAAP,CAAcI,MAAd,KAAyB,CAAhC;AAEH,CApFD","sourcesContent":["\"use strict\";\n\nvar FormatValidators = require(\"./FormatValidators\"),\n    Report           = require(\"./Report\"),\n    Utils            = require(\"./Utils\");\n\nvar shouldSkipValidate = function (options, errors) {\n    return options &&\n        Array.isArray(options.includeErrors) &&\n        options.includeErrors.length > 0 &&\n        !errors.some(function (err) { return options.includeErrors.includes(err);});\n};\n\nvar JsonValidators = {\n    multipleOf: function (report, schema, json) {\n        // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.1.1.2\n        if (shouldSkipValidate(this.validateOptions, [\"MULTIPLE_OF\"])) {\n            return;\n        }\n        if (typeof json !== \"number\") {\n            return;\n        }\n\n        var stringMultipleOf = String(schema.multipleOf);\n        var scale = Math.pow(10, stringMultipleOf.length - stringMultipleOf.indexOf(\".\") - 1);\n        if (Utils.whatIs((json * scale) / (schema.multipleOf * scale)) !== \"integer\") {\n            report.addError(\"MULTIPLE_OF\", [json, schema.multipleOf], null, schema);\n        }\n    },\n    maximum: function (report, schema, json) {\n        // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.1.2.2\n        if (shouldSkipValidate(this.validateOptions, [\"MAXIMUM\", \"MAXIMUM_EXCLUSIVE\"])) {\n            return;\n        }\n        if (typeof json !== \"number\") {\n            return;\n        }\n        if (schema.exclusiveMaximum !== true) {\n            if (json > schema.maximum) {\n                report.addError(\"MAXIMUM\", [json, schema.maximum], null, schema);\n            }\n        } else {\n            if (json >= schema.maximum) {\n                report.addError(\"MAXIMUM_EXCLUSIVE\", [json, schema.maximum], null, schema);\n            }\n        }\n    },\n    exclusiveMaximum: function () {\n        // covered in maximum\n    },\n    minimum: function (report, schema, json) {\n        // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.1.3.2\n        if (shouldSkipValidate(this.validateOptions, [\"MINIMUM\", \"MINIMUM_EXCLUSIVE\"])) {\n            return;\n        }\n        if (typeof json !== \"number\") {\n            return;\n        }\n        if (schema.exclusiveMinimum !== true) {\n            if (json < schema.minimum) {\n                report.addError(\"MINIMUM\", [json, schema.minimum], null, schema);\n            }\n        } else {\n            if (json <= schema.minimum) {\n                report.addError(\"MINIMUM_EXCLUSIVE\", [json, schema.minimum], null, schema);\n            }\n        }\n    },\n    exclusiveMinimum: function () {\n        // covered in minimum\n    },\n    maxLength: function (report, schema, json) {\n        // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.2.1.2\n        if (shouldSkipValidate(this.validateOptions, [\"MAX_LENGTH\"])) {\n            return;\n        }\n        if (typeof json !== \"string\") {\n            return;\n        }\n        if (Utils.ucs2decode(json).length > schema.maxLength) {\n            report.addError(\"MAX_LENGTH\", [json.length, schema.maxLength], null, schema);\n        }\n    },\n    minLength: function (report, schema, json) {\n        // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.2.2.2\n        if (shouldSkipValidate(this.validateOptions, [\"MIN_LENGTH\"])) {\n            return;\n        }\n        if (typeof json !== \"string\") {\n            return;\n        }\n        if (Utils.ucs2decode(json).length < schema.minLength) {\n            report.addError(\"MIN_LENGTH\", [json.length, schema.minLength], null, schema);\n        }\n    },\n    pattern: function (report, schema, json) {\n        // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.2.3.2\n        if (shouldSkipValidate(this.validateOptions, [\"PATTERN\"])) {\n            return;\n        }\n        if (typeof json !== \"string\") {\n            return;\n        }\n        if (RegExp(schema.pattern).test(json) === false) {\n            report.addError(\"PATTERN\", [schema.pattern, json], null, schema);\n        }\n    },\n    additionalItems: function (report, schema, json) {\n        // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.3.1.2\n        if (shouldSkipValidate(this.validateOptions, [\"ARRAY_ADDITIONAL_ITEMS\"])) {\n            return;\n        }\n        if (!Array.isArray(json)) {\n            return;\n        }\n        // if the value of \"additionalItems\" is boolean value false and the value of \"items\" is an array,\n        // the json is valid if its size is less than, or equal to, the size of \"items\".\n        if (schema.additionalItems === false && Array.isArray(schema.items)) {\n            if (json.length > schema.items.length) {\n                report.addError(\"ARRAY_ADDITIONAL_ITEMS\", null, null, schema);\n            }\n        }\n    },\n    items: function () { /*report, schema, json*/\n        // covered in additionalItems\n    },\n    maxItems: function (report, schema, json) {\n        // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.3.2.2\n        if (shouldSkipValidate(this.validateOptions, [\"ARRAY_LENGTH_LONG\"])) {\n            return;\n        }\n        if (!Array.isArray(json)) {\n            return;\n        }\n        if (json.length > schema.maxItems) {\n            report.addError(\"ARRAY_LENGTH_LONG\", [json.length, schema.maxItems], null, schema);\n        }\n    },\n    minItems: function (report, schema, json) {\n        // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.3.3.2\n        if (shouldSkipValidate(this.validateOptions, [\"ARRAY_LENGTH_SHORT\"])) {\n            return;\n        }\n        if (!Array.isArray(json)) {\n            return;\n        }\n        if (json.length < schema.minItems) {\n            report.addError(\"ARRAY_LENGTH_SHORT\", [json.length, schema.minItems], null, schema);\n        }\n    },\n    uniqueItems: function (report, schema, json) {\n        // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.3.4.2\n        if (shouldSkipValidate(this.validateOptions, [\"ARRAY_UNIQUE\"])) {\n            return;\n        }\n        if (!Array.isArray(json)) {\n            return;\n        }\n        if (schema.uniqueItems === true) {\n            var matches = [];\n            if (Utils.isUniqueArray(json, matches) === false) {\n                report.addError(\"ARRAY_UNIQUE\", matches, null, schema);\n            }\n        }\n    },\n    maxProperties: function (report, schema, json) {\n        // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.4.1.2\n        if (shouldSkipValidate(this.validateOptions, [\"OBJECT_PROPERTIES_MAXIMUM\"])) {\n            return;\n        }\n        if (Utils.whatIs(json) !== \"object\") {\n            return;\n        }\n        var keysCount = Object.keys(json).length;\n        if (keysCount > schema.maxProperties) {\n            report.addError(\"OBJECT_PROPERTIES_MAXIMUM\", [keysCount, schema.maxProperties], null, schema);\n        }\n    },\n    minProperties: function (report, schema, json) {\n        // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.4.2.2\n        if (shouldSkipValidate(this.validateOptions, [\"OBJECT_PROPERTIES_MINIMUM\"])) {\n            return;\n        }\n        if (Utils.whatIs(json) !== \"object\") {\n            return;\n        }\n        var keysCount = Object.keys(json).length;\n        if (keysCount < schema.minProperties) {\n            report.addError(\"OBJECT_PROPERTIES_MINIMUM\", [keysCount, schema.minProperties], null, schema);\n        }\n    },\n    required: function (report, schema, json) {\n        // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.4.3.2\n        if (shouldSkipValidate(this.validateOptions, [\"OBJECT_MISSING_REQUIRED_PROPERTY\"])) {\n            return;\n        }\n        if (Utils.whatIs(json) !== \"object\") {\n            return;\n        }\n        var idx = schema.required.length;\n        while (idx--) {\n            var requiredPropertyName = schema.required[idx];\n            if (json[requiredPropertyName] === undefined) {\n                report.addError(\"OBJECT_MISSING_REQUIRED_PROPERTY\", [requiredPropertyName], null, schema);\n            }\n        }\n    },\n    additionalProperties: function (report, schema, json) {\n        // covered in properties and patternProperties\n        if (schema.properties === undefined && schema.patternProperties === undefined) {\n            return JsonValidators.properties.call(this, report, schema, json);\n        }\n    },\n    patternProperties: function (report, schema, json) {\n        // covered in properties\n        if (schema.properties === undefined) {\n            return JsonValidators.properties.call(this, report, schema, json);\n        }\n    },\n    properties: function (report, schema, json) {\n        // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.4.4.2\n        if (shouldSkipValidate(this.validateOptions, [\"OBJECT_ADDITIONAL_PROPERTIES\"])) {\n            return;\n        }\n        if (Utils.whatIs(json) !== \"object\") {\n            return;\n        }\n        var properties = schema.properties !== undefined ? schema.properties : {};\n        var patternProperties = schema.patternProperties !== undefined ? schema.patternProperties : {};\n        if (schema.additionalProperties === false) {\n            // The property set of the json to validate.\n            var s = Object.keys(json);\n            // The property set from \"properties\".\n            var p = Object.keys(properties);\n            // The property set from \"patternProperties\".\n            var pp = Object.keys(patternProperties);\n            // remove from \"s\" all elements of \"p\", if any;\n            s = Utils.difference(s, p);\n            // for each regex in \"pp\", remove all elements of \"s\" which this regex matches.\n            var idx = pp.length;\n            while (idx--) {\n                var regExp = RegExp(pp[idx]),\n                    idx2 = s.length;\n                while (idx2--) {\n                    if (regExp.test(s[idx2]) === true) {\n                        s.splice(idx2, 1);\n                    }\n                }\n            }\n            // Validation of the json succeeds if, after these two steps, set \"s\" is empty.\n            if (s.length > 0) {\n                // assumeAdditional can be an array of allowed properties\n                var idx3 = this.options.assumeAdditional.length;\n                if (idx3) {\n                    while (idx3--) {\n                        var io = s.indexOf(this.options.assumeAdditional[idx3]);\n                        if (io !== -1) {\n                            s.splice(io, 1);\n                        }\n                    }\n                }\n                var idx4 = s.length;\n                if (idx4) {\n                    while (idx4--) {\n                        report.addError(\"OBJECT_ADDITIONAL_PROPERTIES\", [s[idx4]], null, schema);\n                    }\n                }\n            }\n        }\n    },\n    dependencies: function (report, schema, json) {\n        // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.4.5.2\n        if (shouldSkipValidate(this.validateOptions, [\"OBJECT_DEPENDENCY_KEY\"])) {\n            return;\n        }\n        if (Utils.whatIs(json) !== \"object\") {\n            return;\n        }\n\n        var keys = Object.keys(schema.dependencies),\n            idx = keys.length;\n\n        while (idx--) {\n            // iterate all dependencies\n            var dependencyName = keys[idx];\n            if (json[dependencyName]) {\n                var dependencyDefinition = schema.dependencies[dependencyName];\n                if (Utils.whatIs(dependencyDefinition) === \"object\") {\n                    // if dependency is a schema, validate against this schema\n                    exports.validate.call(this, report, dependencyDefinition, json);\n                } else { // Array\n                    // if dependency is an array, object needs to have all properties in this array\n                    var idx2 = dependencyDefinition.length;\n                    while (idx2--) {\n                        var requiredPropertyName = dependencyDefinition[idx2];\n                        if (json[requiredPropertyName] === undefined) {\n                            report.addError(\"OBJECT_DEPENDENCY_KEY\", [requiredPropertyName, dependencyName], null, schema);\n                        }\n                    }\n                }\n            }\n        }\n    },\n    enum: function (report, schema, json) {\n        // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.5.1.2\n        if (shouldSkipValidate(this.validateOptions, [\"ENUM_CASE_MISMATCH\", \"ENUM_MISMATCH\"])) {\n            return;\n        }\n        var match = false,\n            caseInsensitiveMatch = false,\n            idx = schema.enum.length;\n        while (idx--) {\n            if (Utils.areEqual(json, schema.enum[idx])) {\n                match = true;\n                break;\n            } else if (Utils.areEqual(json, schema.enum[idx]), { caseInsensitiveComparison: true }) {\n                caseInsensitiveMatch = true;\n            }\n        }\n\n        if (match === false) {\n            var error = caseInsensitiveMatch && this.options.enumCaseInsensitiveComparison ? \"ENUM_CASE_MISMATCH\" : \"ENUM_MISMATCH\";\n            report.addError(error, [json], null, schema);\n        }\n    },\n    type: function (report, schema, json) {\n        // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.5.2.2\n        if (shouldSkipValidate(this.validateOptions, [\"INVALID_TYPE\"])) {\n            return;\n        }\n        var jsonType = Utils.whatIs(json);\n        if (typeof schema.type === \"string\") {\n            if (jsonType !== schema.type && (jsonType !== \"integer\" || schema.type !== \"number\")) {\n                report.addError(\"INVALID_TYPE\", [schema.type, jsonType], null, schema);\n            }\n        } else {\n            if (schema.type.indexOf(jsonType) === -1 && (jsonType !== \"integer\" || schema.type.indexOf(\"number\") === -1)) {\n                report.addError(\"INVALID_TYPE\", [schema.type, jsonType], null, schema);\n            }\n        }\n    },\n    allOf: function (report, schema, json) {\n        // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.5.3.2\n        var idx = schema.allOf.length;\n        while (idx--) {\n            var validateResult = exports.validate.call(this, report, schema.allOf[idx], json);\n            if (this.options.breakOnFirstError && validateResult === false) {\n                break;\n            }\n        }\n    },\n    anyOf: function (report, schema, json) {\n        // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.5.4.2\n        var subReports = [],\n            passed = false,\n            idx = schema.anyOf.length;\n\n        while (idx-- && passed === false) {\n            var subReport = new Report(report);\n            subReports.push(subReport);\n            passed = exports.validate.call(this, subReport, schema.anyOf[idx], json);\n        }\n\n        if (passed === false) {\n            report.addError(\"ANY_OF_MISSING\", undefined, subReports, schema);\n        }\n    },\n    oneOf: function (report, schema, json) {\n        // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.5.5.2\n        var passes = 0,\n            subReports = [],\n            idx = schema.oneOf.length;\n\n        while (idx--) {\n            var subReport = new Report(report, { maxErrors: 1 });\n            subReports.push(subReport);\n            if (exports.validate.call(this, subReport, schema.oneOf[idx], json) === true) {\n                passes++;\n            }\n        }\n\n        if (passes === 0) {\n            report.addError(\"ONE_OF_MISSING\", undefined, subReports, schema);\n        } else if (passes > 1) {\n            report.addError(\"ONE_OF_MULTIPLE\", null, null, schema);\n        }\n    },\n    not: function (report, schema, json) {\n        // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.5.6.2\n        var subReport = new Report(report);\n        if (exports.validate.call(this, subReport, schema.not, json) === true) {\n            report.addError(\"NOT_PASSED\", null, null, schema);\n        }\n    },\n    definitions: function () { /*report, schema, json*/\n        // http://json-schema.org/latest/json-schema-validation.html#rfc.section.5.5.7.2\n        // nothing to do here\n    },\n    format: function (report, schema, json) {\n        // http://json-schema.org/latest/json-schema-validation.html#rfc.section.7.2\n        var formatValidatorFn = FormatValidators[schema.format];\n        if (typeof formatValidatorFn === \"function\") {\n            if (shouldSkipValidate(this.validateOptions, [\"INVALID_FORMAT\"])) {\n                return;\n            }\n            if (formatValidatorFn.length === 2) {\n                // async - need to clone the path here, because it will change by the time async function reports back\n                var pathBeforeAsync = Utils.clone(report.path);\n                report.addAsyncTask(formatValidatorFn, [json], function (result) {\n                    if (result !== true) {\n                        var backup = report.path;\n                        report.path = pathBeforeAsync;\n                        report.addError(\"INVALID_FORMAT\", [schema.format, json], null, schema);\n                        report.path = backup;\n                    }\n                });\n            } else {\n                // sync\n                if (formatValidatorFn.call(this, json) !== true) {\n                    report.addError(\"INVALID_FORMAT\", [schema.format, json], null, schema);\n                }\n            }\n        } else if (this.options.ignoreUnknownFormats !== true) {\n            report.addError(\"UNKNOWN_FORMAT\", [schema.format], null, schema);\n        }\n    }\n};\n\nvar recurseArray = function (report, schema, json) {\n    // http://json-schema.org/latest/json-schema-validation.html#rfc.section.8.2\n\n    var idx = json.length;\n\n    // If \"items\" is an array, this situation, the schema depends on the index:\n    // if the index is less than, or equal to, the size of \"items\",\n    // the child instance must be valid against the corresponding schema in the \"items\" array;\n    // otherwise, it must be valid against the schema defined by \"additionalItems\".\n    if (Array.isArray(schema.items)) {\n\n        while (idx--) {\n            // equal to doesn't make sense here\n            if (idx < schema.items.length) {\n                report.path.push(idx);\n                exports.validate.call(this, report, schema.items[idx], json[idx]);\n                report.path.pop();\n            } else {\n                // might be boolean, so check that it's an object\n                if (typeof schema.additionalItems === \"object\") {\n                    report.path.push(idx);\n                    exports.validate.call(this, report, schema.additionalItems, json[idx]);\n                    report.path.pop();\n                }\n            }\n        }\n\n    } else if (typeof schema.items === \"object\") {\n\n        // If items is a schema, then the child instance must be valid against this schema,\n        // regardless of its index, and regardless of the value of \"additionalItems\".\n        while (idx--) {\n            report.path.push(idx);\n            exports.validate.call(this, report, schema.items, json[idx]);\n            report.path.pop();\n        }\n\n    }\n};\n\nvar recurseObject = function (report, schema, json) {\n    // http://json-schema.org/latest/json-schema-validation.html#rfc.section.8.3\n\n    // If \"additionalProperties\" is absent, it is considered present with an empty schema as a value.\n    // In addition, boolean value true is considered equivalent to an empty schema.\n    var additionalProperties = schema.additionalProperties;\n    if (additionalProperties === true || additionalProperties === undefined) {\n        additionalProperties = {};\n    }\n\n    // p - The property set from \"properties\".\n    var p = schema.properties ? Object.keys(schema.properties) : [];\n\n    // pp - The property set from \"patternProperties\". Elements of this set will be called regexes for convenience.\n    var pp = schema.patternProperties ? Object.keys(schema.patternProperties) : [];\n\n    // m - The property name of the child.\n    var keys = Object.keys(json),\n        idx = keys.length;\n\n    while (idx--) {\n        var m = keys[idx],\n            propertyValue = json[m];\n\n        // s - The set of schemas for the child instance.\n        var s = [];\n\n        // 1. If set \"p\" contains value \"m\", then the corresponding schema in \"properties\" is added to \"s\".\n        if (p.indexOf(m) !== -1) {\n            s.push(schema.properties[m]);\n        }\n\n        // 2. For each regex in \"pp\", if it matches \"m\" successfully, the corresponding schema in \"patternProperties\" is added to \"s\".\n        var idx2 = pp.length;\n        while (idx2--) {\n            var regexString = pp[idx2];\n            if (RegExp(regexString).test(m) === true) {\n                s.push(schema.patternProperties[regexString]);\n            }\n        }\n\n        // 3. The schema defined by \"additionalProperties\" is added to \"s\" if and only if, at this stage, \"s\" is empty.\n        if (s.length === 0 && additionalProperties !== false) {\n            s.push(additionalProperties);\n        }\n\n        // we are passing tests even without this assert because this is covered by properties check\n        // if s is empty in this stage, no additionalProperties are allowed\n        // report.expect(s.length !== 0, 'E001', m);\n\n        // Instance property value must pass all schemas from s\n        idx2 = s.length;\n        while (idx2--) {\n            report.path.push(m);\n            exports.validate.call(this, report, s[idx2], propertyValue);\n            report.path.pop();\n        }\n    }\n};\n\nexports.JsonValidators = JsonValidators;\n\n/**\n *\n * @param {Report} report\n * @param {*} schema\n * @param {*} json\n */\nexports.validate = function (report, schema, json) {\n\n    report.commonErrorMessage = \"JSON_OBJECT_VALIDATION_FAILED\";\n\n    // check if schema is an object\n    var to = Utils.whatIs(schema);\n    if (to !== \"object\") {\n        report.addError(\"SCHEMA_NOT_AN_OBJECT\", [to], null, schema);\n        return false;\n    }\n\n    // check if schema is empty, everything is valid against empty schema\n    var keys = Object.keys(schema);\n    if (keys.length === 0) {\n        return true;\n    }\n\n    // this method can be called recursively, so we need to remember our root\n    var isRoot = false;\n    if (!report.rootSchema) {\n        report.rootSchema = schema;\n        isRoot = true;\n    }\n\n    // follow schema.$ref keys\n    if (schema.$ref !== undefined) {\n        // avoid infinite loop with maxRefs\n        var maxRefs = 99;\n        while (schema.$ref && maxRefs > 0) {\n            if (!schema.__$refResolved) {\n                report.addError(\"REF_UNRESOLVED\", [schema.$ref], null, schema);\n                break;\n            } else if (schema.__$refResolved === schema) {\n                break;\n            } else {\n                schema = schema.__$refResolved;\n                keys = Object.keys(schema);\n            }\n            maxRefs--;\n        }\n        if (maxRefs === 0) {\n            throw new Error(\"Circular dependency by $ref references!\");\n        }\n    }\n\n    // type checking first\n    var jsonType = Utils.whatIs(json);\n    if (schema.type) {\n        keys.splice(keys.indexOf(\"type\"), 1);\n        JsonValidators.type.call(this, report, schema, json);\n        if (report.errors.length && this.options.breakOnFirstError) {\n            return false;\n        }\n    }\n\n    // now iterate all the keys in schema and execute validation methods\n    var idx = keys.length;\n    while (idx--) {\n        if (JsonValidators[keys[idx]]) {\n            JsonValidators[keys[idx]].call(this, report, schema, json);\n            if (report.errors.length && this.options.breakOnFirstError) { break; }\n        }\n    }\n\n    if (report.errors.length === 0 || this.options.breakOnFirstError === false) {\n        if (jsonType === \"array\") {\n            recurseArray.call(this, report, schema, json);\n        } else if (jsonType === \"object\") {\n            recurseObject.call(this, report, schema, json);\n        }\n    }\n\n    if (typeof this.options.customValidator === \"function\") {\n        this.options.customValidator.call(this, report, schema, json);\n    }\n\n    // we don't need the root pointer anymore\n    if (isRoot) {\n        report.rootSchema = undefined;\n    }\n\n    // return valid just to be able to break at some code points\n    return report.errors.length === 0;\n\n};\n"]},"metadata":{},"sourceType":"script"}