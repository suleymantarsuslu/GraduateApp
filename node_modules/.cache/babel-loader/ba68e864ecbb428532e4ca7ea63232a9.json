{"ast":null,"code":"const findSchemaDefinition = require('./find-schema-definition'); // Gets the schema of the first media type defined in the `content` of the path operation\n// or returns the ref if there's no Request Body Object.\n//\n// If the ref looks like a `requestBodies` reference, then do a lookup for the actual schema\n// https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#fixed-fields-8\n\n\nmodule.exports = function getSchema(pathOperation, oas) {\n  try {\n    if (pathOperation.requestBody.content) {\n      const type = Object.keys(pathOperation.requestBody.content)[0];\n      return {\n        type,\n        schema: pathOperation.requestBody.content[type].schema\n      };\n    }\n\n    if (pathOperation.requestBody && pathOperation.requestBody.$ref.match(/^#\\/components\\/requestBodies\\/.*$/)) {\n      return getSchema({\n        requestBody: findSchemaDefinition(pathOperation.requestBody.$ref, oas)\n      });\n    }\n\n    return {\n      type: 'application/json',\n      schema: pathOperation.requestBody\n    };\n  } catch (e) {} // eslint-disable-line no-empty\n\n\n  return undefined;\n};","map":{"version":3,"sources":["/Users/suleymantarsuslu/Desktop/graduateApp/new/graduate/node_modules/@readme/oas-tooling/src/lib/get-schema.js"],"names":["findSchemaDefinition","require","module","exports","getSchema","pathOperation","oas","requestBody","content","type","Object","keys","schema","$ref","match","e","undefined"],"mappings":"AAAA,MAAMA,oBAAoB,GAAGC,OAAO,CAAC,0BAAD,CAApC,C,CAEA;AACA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,SAASC,SAAT,CAAmBC,aAAnB,EAAkCC,GAAlC,EAAuC;AACtD,MAAI;AACF,QAAID,aAAa,CAACE,WAAd,CAA0BC,OAA9B,EAAuC;AACrC,YAAMC,IAAI,GAAGC,MAAM,CAACC,IAAP,CAAYN,aAAa,CAACE,WAAd,CAA0BC,OAAtC,EAA+C,CAA/C,CAAb;AACA,aAAO;AAAEC,QAAAA,IAAF;AAAQG,QAAAA,MAAM,EAAEP,aAAa,CAACE,WAAd,CAA0BC,OAA1B,CAAkCC,IAAlC,EAAwCG;AAAxD,OAAP;AACD;;AAED,QAAIP,aAAa,CAACE,WAAd,IAA6BF,aAAa,CAACE,WAAd,CAA0BM,IAA1B,CAA+BC,KAA/B,CAAqC,oCAArC,CAAjC,EAA6G;AAC3G,aAAOV,SAAS,CAAC;AAAEG,QAAAA,WAAW,EAAEP,oBAAoB,CAACK,aAAa,CAACE,WAAd,CAA0BM,IAA3B,EAAiCP,GAAjC;AAAnC,OAAD,CAAhB;AACD;;AAED,WAAO;AACLG,MAAAA,IAAI,EAAE,kBADD;AAELG,MAAAA,MAAM,EAAEP,aAAa,CAACE;AAFjB,KAAP;AAID,GAdD,CAcE,OAAOQ,CAAP,EAAU,CAAE,CAfwC,CAevC;;;AAEf,SAAOC,SAAP;AACD,CAlBD","sourcesContent":["const findSchemaDefinition = require('./find-schema-definition');\n\n// Gets the schema of the first media type defined in the `content` of the path operation\n// or returns the ref if there's no Request Body Object.\n//\n// If the ref looks like a `requestBodies` reference, then do a lookup for the actual schema\n// https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#fixed-fields-8\nmodule.exports = function getSchema(pathOperation, oas) {\n  try {\n    if (pathOperation.requestBody.content) {\n      const type = Object.keys(pathOperation.requestBody.content)[0];\n      return { type, schema: pathOperation.requestBody.content[type].schema };\n    }\n\n    if (pathOperation.requestBody && pathOperation.requestBody.$ref.match(/^#\\/components\\/requestBodies\\/.*$/)) {\n      return getSchema({ requestBody: findSchemaDefinition(pathOperation.requestBody.$ref, oas) });\n    }\n\n    return {\n      type: 'application/json',\n      schema: pathOperation.requestBody,\n    };\n  } catch (e) {} // eslint-disable-line no-empty\n\n  return undefined;\n};\n"]},"metadata":{},"sourceType":"script"}