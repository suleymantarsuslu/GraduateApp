{"ast":null,"code":"\"use strict\";\n\nvar reduce = require(\"reducible/reduce\");\n\nvar reducible = require(\"reducible/reducible\");\n\nvar end = require(\"reducible/end\");\n\nvar isError = require(\"reducible/is-error\");\n\nvar PREFIX = \"\\u200B\";\nvar OPEN = PREFIX + \"< \";\nvar CLOSE = PREFIX + \">\\n\";\nvar ERROR = PREFIX + \"\\u26A1 \";\nvar DELIMITER = PREFIX + \" \";\nvar SPECIALS = [OPEN, CLOSE, ERROR, DELIMITER];\n\nvar write = function () {\n  if (typeof process !== \"undefined\" && typeof process.stdout !== \"undefined\" && typeof process.stdout.write === \"function\") {\n    var inspect = require(\"util\").inspect;\n\n    var slicer = Array.prototype.slice;\n    return function write() {\n      var message = slicer.call(arguments).map(function ($) {\n        return SPECIALS.indexOf($) >= 0 ? $ : inspect($);\n      }).join(\"\");\n      process.stdout.write(message);\n    };\n  } else {\n    return console.log.bind(console);\n  }\n}();\n\nfunction print(source) {\n  var open = false;\n  reduce(source, function reducePrintSource(value) {\n    if (!open) write(OPEN);\n    open = true;\n    if (value === end) write(CLOSE);else if (isError(value)) write(ERROR, value, DELIMITER, CLOSE);else write(value, DELIMITER);\n  });\n}\n\nmodule.exports = print;","map":{"version":3,"sources":["/Users/suleymantarsuslu/Desktop/graduateApp/new/graduate/node_modules/reducers/debug/print.js"],"names":["reduce","require","reducible","end","isError","PREFIX","OPEN","CLOSE","ERROR","DELIMITER","SPECIALS","write","process","stdout","inspect","slicer","Array","prototype","slice","message","call","arguments","map","$","indexOf","join","console","log","bind","print","source","open","reducePrintSource","value","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIE,GAAG,GAAGF,OAAO,CAAC,eAAD,CAAjB;;AACA,IAAIG,OAAO,GAAGH,OAAO,CAAC,oBAAD,CAArB;;AAEA,IAAII,MAAM,GAAG,QAAb;AACA,IAAIC,IAAI,GAAGD,MAAM,GAAG,IAApB;AACA,IAAIE,KAAK,GAAGF,MAAM,GAAG,KAArB;AACA,IAAIG,KAAK,GAAGH,MAAM,GAAG,SAArB;AACA,IAAII,SAAS,GAAGJ,MAAM,GAAG,GAAzB;AAEA,IAAIK,QAAQ,GAAG,CAAEJ,IAAF,EAAQC,KAAR,EAAeC,KAAf,EAAsBC,SAAtB,CAAf;;AAEA,IAAIE,KAAK,GAAI,YAAW;AACtB,MAAI,OAAOC,OAAP,KAAoB,WAApB,IACA,OAAOA,OAAO,CAACC,MAAf,KAA2B,WAD3B,IAEA,OAAOD,OAAO,CAACC,MAAR,CAAeF,KAAtB,KAAiC,UAFrC,EAEiD;AAC/C,QAAIG,OAAO,GAAGb,OAAO,CAAC,MAAD,CAAP,CAAgBa,OAA9B;;AACA,QAAIC,MAAM,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAA7B;AACA,WAAO,SAASP,KAAT,GAAiB;AACtB,UAAIQ,OAAO,GAAGJ,MAAM,CAACK,IAAP,CAAYC,SAAZ,EAAuBC,GAAvB,CAA2B,UAASC,CAAT,EAAY;AACnD,eAAOb,QAAQ,CAACc,OAAT,CAAiBD,CAAjB,KAAuB,CAAvB,GAA2BA,CAA3B,GAA+BT,OAAO,CAACS,CAAD,CAA7C;AACD,OAFa,EAEXE,IAFW,CAEN,EAFM,CAAd;AAGAb,MAAAA,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAqBQ,OAArB;AACD,KALD;AAMD,GAXD,MAWO;AACL,WAAOO,OAAO,CAACC,GAAR,CAAYC,IAAZ,CAAiBF,OAAjB,CAAP;AACD;AACF,CAfW,EAAZ;;AAiBA,SAASG,KAAT,CAAeC,MAAf,EAAuB;AACrB,MAAIC,IAAI,GAAG,KAAX;AACA/B,EAAAA,MAAM,CAAC8B,MAAD,EAAS,SAASE,iBAAT,CAA2BC,KAA3B,EAAkC;AAC/C,QAAI,CAACF,IAAL,EAAWpB,KAAK,CAACL,IAAD,CAAL;AACXyB,IAAAA,IAAI,GAAG,IAAP;AAEA,QAAIE,KAAK,KAAK9B,GAAd,EAAmBQ,KAAK,CAACJ,KAAD,CAAL,CAAnB,KACK,IAAIH,OAAO,CAAC6B,KAAD,CAAX,EAAoBtB,KAAK,CAACH,KAAD,EAAQyB,KAAR,EAAexB,SAAf,EAA0BF,KAA1B,CAAL,CAApB,KACAI,KAAK,CAACsB,KAAD,EAAQxB,SAAR,CAAL;AACN,GAPK,CAAN;AAQD;;AAEDyB,MAAM,CAACC,OAAP,GAAiBN,KAAjB","sourcesContent":["\"use strict\";\n\nvar reduce = require(\"reducible/reduce\")\nvar reducible = require(\"reducible/reducible\")\nvar end = require(\"reducible/end\")\nvar isError = require(\"reducible/is-error\")\n\nvar PREFIX = \"\\u200B\"\nvar OPEN = PREFIX + \"< \"\nvar CLOSE = PREFIX + \">\\n\"\nvar ERROR = PREFIX + \"\\u26A1 \"\nvar DELIMITER = PREFIX + \" \"\n\nvar SPECIALS = [ OPEN, CLOSE, ERROR, DELIMITER ]\n\nvar write = (function() {\n  if (typeof(process) !== \"undefined\" &&\n      typeof(process.stdout) !== \"undefined\" &&\n      typeof(process.stdout.write) === \"function\") {\n    var inspect = require(\"util\").inspect\n    var slicer = Array.prototype.slice\n    return function write() {\n      var message = slicer.call(arguments).map(function($) {\n        return SPECIALS.indexOf($) >= 0 ? $ : inspect($)\n      }).join(\"\")\n      process.stdout.write(message)\n    }\n  } else {\n    return console.log.bind(console)\n  }\n})()\n\nfunction print(source) {\n  var open = false\n  reduce(source, function reducePrintSource(value) {\n    if (!open) write(OPEN)\n    open = true\n\n    if (value === end) write(CLOSE)\n    else if (isError(value)) write(ERROR, value, DELIMITER, CLOSE)\n    else write(value, DELIMITER)\n  })\n}\n\nmodule.exports = print\n"]},"metadata":{},"sourceType":"script"}