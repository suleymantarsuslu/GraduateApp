{"ast":null,"code":"// Nabbed from react-jsonschema-form, but this should probably be extracted into a slim NPM module.\nconst jsonpointer = require('jsonpointer');\n\nfunction findSchemaDefinition($ref, definitions = {}) {\n  const origRef = $ref;\n  $ref = $ref.trim();\n\n  if ($ref === '') {\n    // If this ref is empty, don't bother trying to look for it.\n    return false;\n  }\n\n  if ($ref.startsWith('#')) {\n    // Decode URI fragment representation.\n    $ref = decodeURIComponent($ref.substring(1));\n  } else {\n    throw new Error(`Could not find a definition for ${origRef}.`);\n  }\n\n  const current = jsonpointer.get(definitions, $ref);\n\n  if (current === undefined) {\n    throw new Error(`Could not find a definition for ${origRef}.`);\n  }\n\n  return current;\n}\n\nmodule.exports = findSchemaDefinition;","map":{"version":3,"sources":["/Users/suleymantarsuslu/Desktop/graduateApp/new/graduate/node_modules/@readme/oas-tooling/src/lib/find-schema-definition.js"],"names":["jsonpointer","require","findSchemaDefinition","$ref","definitions","origRef","trim","startsWith","decodeURIComponent","substring","Error","current","get","undefined","module","exports"],"mappings":"AAAA;AACA,MAAMA,WAAW,GAAGC,OAAO,CAAC,aAAD,CAA3B;;AAEA,SAASC,oBAAT,CAA8BC,IAA9B,EAAoCC,WAAW,GAAG,EAAlD,EAAsD;AACpD,QAAMC,OAAO,GAAGF,IAAhB;AAEAA,EAAAA,IAAI,GAAGA,IAAI,CAACG,IAAL,EAAP;;AACA,MAAIH,IAAI,KAAK,EAAb,EAAiB;AACf;AACA,WAAO,KAAP;AACD;;AAED,MAAIA,IAAI,CAACI,UAAL,CAAgB,GAAhB,CAAJ,EAA0B;AACxB;AACAJ,IAAAA,IAAI,GAAGK,kBAAkB,CAACL,IAAI,CAACM,SAAL,CAAe,CAAf,CAAD,CAAzB;AACD,GAHD,MAGO;AACL,UAAM,IAAIC,KAAJ,CAAW,mCAAkCL,OAAQ,GAArD,CAAN;AACD;;AAED,QAAMM,OAAO,GAAGX,WAAW,CAACY,GAAZ,CAAgBR,WAAhB,EAA6BD,IAA7B,CAAhB;;AACA,MAAIQ,OAAO,KAAKE,SAAhB,EAA2B;AACzB,UAAM,IAAIH,KAAJ,CAAW,mCAAkCL,OAAQ,GAArD,CAAN;AACD;;AAED,SAAOM,OAAP;AACD;;AAEDG,MAAM,CAACC,OAAP,GAAiBb,oBAAjB","sourcesContent":["// Nabbed from react-jsonschema-form, but this should probably be extracted into a slim NPM module.\nconst jsonpointer = require('jsonpointer');\n\nfunction findSchemaDefinition($ref, definitions = {}) {\n  const origRef = $ref;\n\n  $ref = $ref.trim();\n  if ($ref === '') {\n    // If this ref is empty, don't bother trying to look for it.\n    return false;\n  }\n\n  if ($ref.startsWith('#')) {\n    // Decode URI fragment representation.\n    $ref = decodeURIComponent($ref.substring(1));\n  } else {\n    throw new Error(`Could not find a definition for ${origRef}.`);\n  }\n\n  const current = jsonpointer.get(definitions, $ref);\n  if (current === undefined) {\n    throw new Error(`Could not find a definition for ${origRef}.`);\n  }\n\n  return current;\n}\n\nmodule.exports = findSchemaDefinition;\n"]},"metadata":{},"sourceType":"script"}