{"ast":null,"code":"function harValue(type, value) {\n  if (!value.value) return undefined;\n  return {\n    type,\n    value\n  };\n}\n\nmodule.exports = function configureSecurity(oas, values, scheme) {\n  if (!scheme) return {};\n  if (Object.keys(values || {}).length === 0) return undefined;\n  if (!oas.components.securitySchemes[scheme]) return undefined;\n  const security = oas.components.securitySchemes[scheme];\n\n  if (security.type === 'http') {\n    if (security.scheme === 'basic') {\n      // Return with no header if user and password are blank\n      if (!values[scheme].user && !values[scheme].pass) return false;\n      return harValue('headers', {\n        name: 'Authorization',\n        value: `Basic ${Buffer.from(`${values[scheme].user}:${values[scheme].pass}`).toString('base64')}`\n      });\n    } else if (security.scheme === 'bearer') {\n      if (!values[scheme]) return false;\n      return harValue('headers', {\n        name: 'Authorization',\n        value: `Bearer ${values[scheme]}`\n      });\n    }\n  }\n\n  if (security.type === 'apiKey') {\n    if (security.in === 'query') {\n      return harValue('queryString', {\n        name: security.name,\n        value: values[scheme]\n      });\n    } else if (security.in === 'header') {\n      const header = {\n        name: security.name,\n        value: values[scheme]\n      };\n\n      if (security['x-bearer-format']) {\n        // Uppercase: token -> Token\n        const bearerFormat = security['x-bearer-format'].charAt(0).toUpperCase() + security['x-bearer-format'].slice(1);\n        header.name = security.name;\n        header.value = `${bearerFormat} ${header.value}`;\n      }\n\n      return harValue('headers', header);\n    }\n  }\n\n  if (security.type === 'oauth2') {\n    if (!values[scheme]) return false;\n    return harValue('headers', {\n      name: 'Authorization',\n      value: `Bearer ${values[scheme]}`\n    });\n  }\n\n  return undefined;\n};","map":{"version":3,"sources":["/Users/suleymantarsuslu/Desktop/graduateApp/new/graduate/node_modules/@readme/oas-to-har/src/lib/configure-security.js"],"names":["harValue","type","value","undefined","module","exports","configureSecurity","oas","values","scheme","Object","keys","length","components","securitySchemes","security","user","pass","name","Buffer","from","toString","in","header","bearerFormat","charAt","toUpperCase","slice"],"mappings":"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","sourcesContent":["function harValue(type, value) {\n  if (!value.value) return undefined;\n  return { type, value };\n}\n\nmodule.exports = function configureSecurity(oas, values, scheme) {\n  if (!scheme) return {};\n\n  if (Object.keys(values || {}).length === 0) return undefined;\n\n  if (!oas.components.securitySchemes[scheme]) return undefined;\n  const security = oas.components.securitySchemes[scheme];\n\n  if (security.type === 'http') {\n    if (security.scheme === 'basic') {\n      // Return with no header if user and password are blank\n      if (!values[scheme].user && !values[scheme].pass) return false;\n\n      return harValue('headers', {\n        name: 'Authorization',\n        value: `Basic ${Buffer.from(`${values[scheme].user}:${values[scheme].pass}`).toString('base64')}`,\n      });\n    } else if (security.scheme === 'bearer') {\n      if (!values[scheme]) return false;\n\n      return harValue('headers', {\n        name: 'Authorization',\n        value: `Bearer ${values[scheme]}`,\n      });\n    }\n  }\n\n  if (security.type === 'apiKey') {\n    if (security.in === 'query') {\n      return harValue('queryString', {\n        name: security.name,\n        value: values[scheme],\n      });\n    } else if (security.in === 'header') {\n      const header = {\n        name: security.name,\n        value: values[scheme],\n      };\n\n      if (security['x-bearer-format']) {\n        // Uppercase: token -> Token\n        const bearerFormat = security['x-bearer-format'].charAt(0).toUpperCase() + security['x-bearer-format'].slice(1);\n        header.name = security.name;\n        header.value = `${bearerFormat} ${header.value}`;\n      }\n\n      return harValue('headers', header);\n    }\n  }\n\n  if (security.type === 'oauth2') {\n    if (!values[scheme]) return false;\n\n    return harValue('headers', {\n      name: 'Authorization',\n      value: `Bearer ${values[scheme]}`,\n    });\n  }\n\n  return undefined;\n};\n"]},"metadata":{},"sourceType":"script"}