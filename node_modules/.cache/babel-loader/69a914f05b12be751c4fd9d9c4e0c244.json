{"ast":null,"code":"\"use strict\";\n\nconst $RefParserOptions = require(\"@apidevtools/json-schema-ref-parser/lib/options\");\n\nconst schemaValidator = require(\"./validators/schema\");\n\nconst specValidator = require(\"./validators/spec\");\n\nconst util = require(\"util\");\n\nmodule.exports = ParserOptions;\n/**\n * Options that determine how Swagger APIs are parsed, resolved, dereferenced, and validated.\n *\n * @param {object|ParserOptions} [options] - Overridden options\n * @constructor\n * @extends $RefParserOptions\n */\n\nfunction ParserOptions(options) {\n  $RefParserOptions.call(this, ParserOptions.defaults);\n  $RefParserOptions.apply(this, arguments);\n}\n\nParserOptions.defaults = {\n  /**\n   * Determines how the API definition will be validated.\n   *\n   * You can add additional validators of your own, replace an existing one with\n   * your own implemenation, or disable any validator by setting it to false.\n   */\n  validate: {\n    schema: schemaValidator,\n    spec: specValidator\n  }\n};\nutil.inherits(ParserOptions, $RefParserOptions);","map":{"version":3,"sources":["/Users/suleymantarsuslu/Desktop/graduateApp/new/graduate/node_modules/@apidevtools/swagger-parser/lib/options.js"],"names":["$RefParserOptions","require","schemaValidator","specValidator","util","module","exports","ParserOptions","options","call","defaults","apply","arguments","validate","schema","spec","inherits"],"mappings":"AAAA;;AAEA,MAAMA,iBAAiB,GAAGC,OAAO,CAAC,iDAAD,CAAjC;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,qBAAD,CAA/B;;AACA,MAAME,aAAa,GAAGF,OAAO,CAAC,mBAAD,CAA7B;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AAEAI,MAAM,CAACC,OAAP,GAAiBC,aAAjB;AAEA;;;;;;;;AAOA,SAASA,aAAT,CAAwBC,OAAxB,EAAiC;AAC/BR,EAAAA,iBAAiB,CAACS,IAAlB,CAAuB,IAAvB,EAA6BF,aAAa,CAACG,QAA3C;AACAV,EAAAA,iBAAiB,CAACW,KAAlB,CAAwB,IAAxB,EAA8BC,SAA9B;AACD;;AAEDL,aAAa,CAACG,QAAd,GAAyB;AACvB;;;;;;AAMAG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAEZ,eADA;AAERa,IAAAA,IAAI,EAAEZ;AAFE;AAPa,CAAzB;AAaAC,IAAI,CAACY,QAAL,CAAcT,aAAd,EAA6BP,iBAA7B","sourcesContent":["\"use strict\";\n\nconst $RefParserOptions = require(\"@apidevtools/json-schema-ref-parser/lib/options\");\nconst schemaValidator = require(\"./validators/schema\");\nconst specValidator = require(\"./validators/spec\");\nconst util = require(\"util\");\n\nmodule.exports = ParserOptions;\n\n/**\n * Options that determine how Swagger APIs are parsed, resolved, dereferenced, and validated.\n *\n * @param {object|ParserOptions} [options] - Overridden options\n * @constructor\n * @extends $RefParserOptions\n */\nfunction ParserOptions (options) {\n  $RefParserOptions.call(this, ParserOptions.defaults);\n  $RefParserOptions.apply(this, arguments);\n}\n\nParserOptions.defaults = {\n  /**\n   * Determines how the API definition will be validated.\n   *\n   * You can add additional validators of your own, replace an existing one with\n   * your own implemenation, or disable any validator by setting it to false.\n   */\n  validate: {\n    schema: schemaValidator,\n    spec: specValidator,\n  },\n};\n\nutil.inherits(ParserOptions, $RefParserOptions);\n"]},"metadata":{},"sourceType":"script"}