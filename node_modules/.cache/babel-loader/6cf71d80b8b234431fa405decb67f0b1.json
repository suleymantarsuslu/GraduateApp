{"ast":null,"code":"var _jsxFileName = \"/Users/suleymantarsuslu/Desktop/graduateApp/new/graduate/src/Register.js\";\nimport React, { Component } from \"react\";\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\nimport axios from \"axios\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlechange = event => {\n      const target = event.target;\n      const name = target.name;\n      const value = target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.submit = async event => {\n      event.preventDefault();\n\n      if (this.isVerified) {\n        const payload = {\n          username: this.state.username,\n          password: this.state.password,\n          email: this.state.email,\n          name: this.state.name,\n          contact: this.state.contact\n        };\n        await axios({\n          url: \"http://commerchant.herokuapp.com/users/register\",\n          method: \"POST\",\n          data: payload\n        }).then(response => (this.setState({\n          datas: response\n        }), alert(response.data.message))).catch(() => console.log(\"Log in Başarısız\"));\n      } else {\n        alert(\"Please  check for reCAPTCHA\");\n      }\n    };\n\n    this.verifyCallback = this.verifyCallback.bind(this);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      email: \"\",\n      name: \"\",\n      contact: \"\",\n      datas: [],\n      isVerified: React.createRef()\n    };\n  }\n\n  verifyCallback(response) {\n    if (response) {\n      console.log(\"reCAPTHA loaded successfuly\");\n      this.setState({\n        isVerified: true\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, this.props.currentCategory), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.name,\n      placeholder: \"Enter Your Name!\",\n      onChange: this.handlechange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Label, {\n      for: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      placeholder: \"Enter Your Username!\",\n      onChange: this.handlechange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      value: this.state.email,\n      placeholder: \"Enter your e-mail!\",\n      onChange: this.handlechange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"examplePassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      value: this.state.password,\n      name: \"password\",\n      placeholder: \"Enter Your Password!\",\n      onChange: this.handlechange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"contact\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, \"Contact\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"contact\",\n      value: this.state.contact,\n      placeholder: \"Enter Your Phone Number!\",\n      onChange: this.handlechange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(ReCAPTCHA, {\n      ref: this.isVerified,\n      sitekey: \"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\",\n      onCallback: this.verifyCallback,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, \"Submit\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/suleymantarsuslu/Desktop/graduateApp/new/graduate/src/Register.js"],"names":["React","Component","Button","Form","FormGroup","Label","Input","FormText","axios","ReCAPTCHA","Register","constructor","props","handlechange","event","target","name","value","setState","submit","preventDefault","isVerified","payload","username","state","password","email","contact","url","method","data","then","response","datas","alert","message","catch","console","log","verifyCallback","bind","createRef","render","currentCategory"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\nimport axios from \"axios\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.verifyCallback = this.verifyCallback.bind(this);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      email: \"\",\n      name: \"\",\n      contact: \"\",\n      datas: [],\n      isVerified: React.createRef(),\n    };\n  }\n\n  handlechange = (event) => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  verifyCallback(response) {\n    if (response) {\n      console.log(\"reCAPTHA loaded successfuly\");\n      this.setState({ isVerified: true });\n    }\n  }\n\n  submit = async (event) => {\n    event.preventDefault();\n    if (this.isVerified) {\n      const payload = {\n        username: this.state.username,\n        password: this.state.password,\n        email: this.state.email,\n        name: this.state.name,\n        contact: this.state.contact,\n      };\n\n      await axios({\n        url: \"http://commerchant.herokuapp.com/users/register\",\n        method: \"POST\",\n        data: payload,\n      })\n        .then(\n          (response) => (\n            this.setState({ datas: response }), alert(response.data.message)\n          )\n        )\n        .catch(() => console.log(\"Log in Başarısız\"));\n    } else {\n      alert(\"Please  check for reCAPTCHA\");\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h3>{this.props.currentCategory}</h3>\n        <Form onSubmit={this.submit}>\n          <FormGroup>\n            <FormGroup>\n              <Label for=\"name\">Name</Label>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                value={this.state.name}\n                placeholder=\"Enter Your Name!\"\n                onChange={this.handlechange}\n              />\n            </FormGroup>\n\n            <Label for=\"username\">Username</Label>\n            <Input\n              type=\"text\"\n              name=\"username\"\n              value={this.state.username}\n              placeholder=\"Enter Your Username!\"\n              onChange={this.handlechange}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"email\">Email</Label>\n            <Input\n              type=\"email\"\n              name=\"email\"\n              value={this.state.email}\n              placeholder=\"Enter your e-mail!\"\n              onChange={this.handlechange}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"examplePassword\">Password</Label>\n            <Input\n              type=\"password\"\n              value={this.state.password}\n              name=\"password\"\n              placeholder=\"Enter Your Password!\"\n              onChange={this.handlechange}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"contact\">Contact</Label>\n            <Input\n              type=\"text\"\n              name=\"contact\"\n              value={this.state.contact}\n              placeholder=\"Enter Your Phone Number!\"\n              onChange={this.handlechange}\n            />\n          </FormGroup>\n          <ReCAPTCHA\n            ref={this.isVerified}\n            sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\n            onCallback={this.verifyCallback}\n          />\n          <Button>Submit</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}