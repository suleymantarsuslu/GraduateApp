{"ast":null,"code":"var hasExcape = /~/;\nvar escapeMatcher = /~[01]/g;\n\nfunction escapeReplacer(m) {\n  switch (m) {\n    case '~1':\n      return '/';\n\n    case '~0':\n      return '~';\n  }\n\n  throw new Error('Invalid tilde escape: ' + m);\n}\n\nfunction untilde(str) {\n  if (!hasExcape.test(str)) return str;\n  return str.replace(escapeMatcher, escapeReplacer);\n}\n\nfunction setter(obj, pointer, value) {\n  var part;\n  var hasNextPart;\n\n  for (var p = 1, len = pointer.length; p < len;) {\n    part = untilde(pointer[p++]);\n    hasNextPart = len > p;\n\n    if (typeof obj[part] === 'undefined') {\n      // support setting of /-\n      if (Array.isArray(obj) && part === '-') {\n        part = obj.length;\n      } // support nested objects/array when setting values\n\n\n      if (hasNextPart) {\n        if (pointer[p] !== '' && pointer[p] < Infinity || pointer[p] === '-') obj[part] = [];else obj[part] = {};\n      }\n    }\n\n    if (!hasNextPart) break;\n    obj = obj[part];\n  }\n\n  var oldValue = obj[part];\n  if (value === undefined) delete obj[part];else obj[part] = value;\n  return oldValue;\n}\n\nfunction compilePointer(pointer) {\n  if (typeof pointer === 'string') {\n    pointer = pointer.split('/');\n    if (pointer[0] === '') return pointer;\n    throw new Error('Invalid JSON pointer.');\n  } else if (Array.isArray(pointer)) {\n    return pointer;\n  }\n\n  throw new Error('Invalid JSON pointer.');\n}\n\nfunction get(obj, pointer) {\n  if (typeof obj !== 'object') throw new Error('Invalid input object.');\n  pointer = compilePointer(pointer);\n  var len = pointer.length;\n  if (len === 1) return obj;\n\n  for (var p = 1; p < len;) {\n    obj = obj[untilde(pointer[p++])];\n    if (len === p) return obj;\n    if (typeof obj !== 'object') return undefined;\n  }\n}\n\nfunction set(obj, pointer, value) {\n  if (typeof obj !== 'object') throw new Error('Invalid input object.');\n  pointer = compilePointer(pointer);\n  if (pointer.length === 0) throw new Error('Invalid JSON pointer for set.');\n  return setter(obj, pointer, value);\n}\n\nfunction compile(pointer) {\n  var compiled = compilePointer(pointer);\n  return {\n    get: function (object) {\n      return get(object, compiled);\n    },\n    set: function (object, value) {\n      return set(object, compiled, value);\n    }\n  };\n}\n\nexports.get = get;\nexports.set = set;\nexports.compile = compile;","map":{"version":3,"sources":["/Users/suleymantarsuslu/Desktop/graduateApp/new/graduate/node_modules/jsonpointer/jsonpointer.js"],"names":["hasExcape","escapeMatcher","escapeReplacer","m","Error","untilde","str","test","replace","setter","obj","pointer","value","part","hasNextPart","p","len","length","Array","isArray","Infinity","oldValue","undefined","compilePointer","split","get","set","compile","compiled","object","exports"],"mappings":"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","sourcesContent":["var hasExcape = /~/\nvar escapeMatcher = /~[01]/g\nfunction escapeReplacer (m) {\n  switch (m) {\n    case '~1': return '/'\n    case '~0': return '~'\n  }\n  throw new Error('Invalid tilde escape: ' + m)\n}\n\nfunction untilde (str) {\n  if (!hasExcape.test(str)) return str\n  return str.replace(escapeMatcher, escapeReplacer)\n}\n\nfunction setter (obj, pointer, value) {\n  var part\n  var hasNextPart\n\n  for (var p = 1, len = pointer.length; p < len;) {\n    part = untilde(pointer[p++])\n    hasNextPart = len > p\n\n    if (typeof obj[part] === 'undefined') {\n      // support setting of /-\n      if (Array.isArray(obj) && part === '-') {\n        part = obj.length\n      }\n\n      // support nested objects/array when setting values\n      if (hasNextPart) {\n        if ((pointer[p] !== '' && pointer[p] < Infinity) || pointer[p] === '-') obj[part] = []\n        else obj[part] = {}\n      }\n    }\n\n    if (!hasNextPart) break\n    obj = obj[part]\n  }\n\n  var oldValue = obj[part]\n  if (value === undefined) delete obj[part]\n  else obj[part] = value\n  return oldValue\n}\n\nfunction compilePointer (pointer) {\n  if (typeof pointer === 'string') {\n    pointer = pointer.split('/')\n    if (pointer[0] === '') return pointer\n    throw new Error('Invalid JSON pointer.')\n  } else if (Array.isArray(pointer)) {\n    return pointer\n  }\n\n  throw new Error('Invalid JSON pointer.')\n}\n\nfunction get (obj, pointer) {\n  if (typeof obj !== 'object') throw new Error('Invalid input object.')\n  pointer = compilePointer(pointer)\n  var len = pointer.length\n  if (len === 1) return obj\n\n  for (var p = 1; p < len;) {\n    obj = obj[untilde(pointer[p++])]\n    if (len === p) return obj\n    if (typeof obj !== 'object') return undefined\n  }\n}\n\nfunction set (obj, pointer, value) {\n  if (typeof obj !== 'object') throw new Error('Invalid input object.')\n  pointer = compilePointer(pointer)\n  if (pointer.length === 0) throw new Error('Invalid JSON pointer for set.')\n  return setter(obj, pointer, value)\n}\n\nfunction compile (pointer) {\n  var compiled = compilePointer(pointer)\n  return {\n    get: function (object) {\n      return get(object, compiled)\n    },\n    set: function (object, value) {\n      return set(object, compiled, value)\n    }\n  }\n}\n\nexports.get = get\nexports.set = set\nexports.compile = compile\n"]},"metadata":{},"sourceType":"script"}