{"ast":null,"code":"var _jsxFileName = \"/Users/suleymantarsuslu/Desktop/graduateApp/new/graduate/src/Register.js\";\nimport React, { Component } from \"react\";\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\nimport axios from \"axios\";\nimport Recaptcha from \"react-google-recaptcha\";\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlechange = event => {\n      if (this.isVerified) {\n        const target = event.target;\n        const name = target.name;\n        const value = target.value;\n        this.setState({\n          [name]: value\n        });\n      } else {\n        alert(\"Please  check for reCAPTCHA\");\n      }\n    };\n\n    this.submit = async event => {\n      event.preventDefault();\n      const payload = {\n        username: this.state.username,\n        password: this.state.password,\n        email: this.state.email,\n        name: this.state.name,\n        contact: this.state.contact\n      };\n      await axios({\n        url: \"http://commerchant.herokuapp.com/users/register\",\n        method: \"POST\",\n        data: payload\n      }).then(response => (this.setState({\n        datas: response\n      }), alert(response.data.message))).catch(() => console.log(\"Log in Başarısız\"));\n    };\n\n    this.recaptchaLoaded = this.recaptchaLoaded.bind(this);\n    this.verifyCallback = this.verifyCallback.bind(this);\n    this.state = {\n      username: /^[a-z\\d]{5,20}$/i,\n      password: /^[#\\w@_-]{8,30}$/,\n      email: /^([a-z\\d\\.-]+)@([a-z\\d-]+)\\.([a-z]{2,8})(\\.[a-z]{2,8})?$/,\n      name: \"\",\n      contact: /^\\d{11}$/,\n      datas: [],\n      isVerified: \"false\"\n    };\n  }\n\n  recaptchaLoaded() {\n    console.log(\"reCAPTHA loaded successfuly\");\n  }\n\n  verifyCallback(response) {\n    if (response) {\n      this.setState({\n        isVerified: true\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, this.props.currentCategory), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.name,\n      placeholder: \"Enter Your Name!\",\n      onChange: this.handlechange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Label, {\n      for: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      placeholder: \"Enter Your Username!\",\n      onChange: this.handlechange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      value: this.state.email,\n      placeholder: \"Enter your e-mail!\",\n      onChange: this.handlechange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"examplePassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      value: this.state.password,\n      name: \"password\",\n      placeholder: \"Enter Your Password!\",\n      onChange: this.handlechange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"contact\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, \"Contact\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"contact\",\n      value: this.state.contact,\n      placeholder: \"Enter Your Phone Number!\",\n      onChange: this.handlechange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(ReCAPTCHA, {\n      sitekey: \"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\",\n      render: \"explicit\",\n      onloadCallback: this.recaptchaLoaded,\n      verifyCallback: this.verifyCallback,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }), \",\", /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, \"Submit\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/suleymantarsuslu/Desktop/graduateApp/new/graduate/src/Register.js"],"names":["React","Component","Button","Form","FormGroup","Label","Input","FormText","axios","Recaptcha","Register","constructor","props","handlechange","event","isVerified","target","name","value","setState","alert","submit","preventDefault","payload","username","state","password","email","contact","url","method","data","then","response","datas","message","catch","console","log","recaptchaLoaded","bind","verifyCallback","render","currentCategory"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\nimport axios from \"axios\";\nimport Recaptcha from \"react-google-recaptcha\" \n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.recaptchaLoaded = this.recaptchaLoaded.bind(this);\n    this.verifyCallback =  this.verifyCallback.bind(this);\n    this.state = {\n      username: /^[a-z\\d]{5,20}$/i,\n      password: /^[#\\w@_-]{8,30}$/,\n      email: /^([a-z\\d\\.-]+)@([a-z\\d-]+)\\.([a-z]{2,8})(\\.[a-z]{2,8})?$/,\n      name: \"\",\n      contact: /^\\d{11}$/,\n      datas: [],\n      isVerified : \"false\"\n    };\n  }\n\n  handlechange = (event) => {\n    if(this.isVerified){\n      const target = event.target;\n      const name = target.name;\n      const value = target.value;\n\n      this.setState({\n        [name]: value,\n      });\n    }else{\n      alert(\"Please  check for reCAPTCHA\")\n    }\n  };\n\n\nrecaptchaLoaded(){\n  console.log(\"reCAPTHA loaded successfuly\")\n}\n\nverifyCallback(response){\n  if(response){\n    this.setState({isVerified: true})\n  }\n}\n\n  submit = async (event) => {\n    event.preventDefault();\n\n    const payload = {\n      username: this.state.username,\n      password: this.state.password,\n      email: this.state.email,\n      name: this.state.name,\n      contact: this.state.contact,\n    };\n\n    await axios({\n      url: \"http://commerchant.herokuapp.com/users/register\",\n      method: \"POST\",\n      data: payload,\n    })\n      .then(\n        (response) => (\n          this.setState({ datas: response }), alert(response.data.message)\n        )\n      )\n      .catch(() => console.log(\"Log in Başarısız\"));\n  };\n\n  render() {\n    return (\n      <div>\n        <h3>{this.props.currentCategory}</h3>\n        <Form onSubmit={this.submit}>\n          <FormGroup>\n            <FormGroup>\n              <Label for=\"name\">Name</Label>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                value={this.state.name}\n                placeholder=\"Enter Your Name!\"\n                onChange={this.handlechange}\n              />\n            </FormGroup>\n\n            <Label for=\"username\">Username</Label>\n            <Input\n              type=\"text\"\n              name=\"username\"\n              value={this.state.username}\n              placeholder=\"Enter Your Username!\"\n              onChange={this.handlechange}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for=\"email\">Email</Label>\n            <Input\n              type=\"email\"\n              name=\"email\"\n              value={this.state.email}\n              placeholder=\"Enter your e-mail!\"\n              onChange={this.handlechange}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for=\"examplePassword\">Password</Label>\n            <Input\n              type=\"password\"\n              value={this.state.password}\n              name=\"password\"\n              placeholder=\"Enter Your Password!\"\n              onChange={this.handlechange}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for=\"contact\">Contact</Label>\n            <Input\n              type=\"text\"\n              name=\"contact\"\n              value={this.state.contact}\n              placeholder=\"Enter Your Phone Number!\"\n              onChange={this.handlechange}\n            />\n          </FormGroup>\n\n          <ReCAPTCHA\n            sitekey=\"6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI\"\n            render= \"explicit\"\n            onloadCallback= {this.recaptchaLoaded}\n            verifyCallback = {this.verifyCallback}\n           />,\n          <Button>Submit</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}